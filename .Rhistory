vinette("fonts")
vignette("fonts")
load.emojifont('OpenSansEmoji.ttf')
library("emojifont")
load.emojifont('OpenSansEmoji.ttf')
svglite::svglite(file = "~/desktop/out.svg", user_fonts = "OpenSansEmoji")
svglite::svglite(file = "~/desktop/out.svg", user_fonts = list("OpenSansEmoji"))
svglite(file = "~/desktop/out.svg", user_fonts = list("OpenSansEmoji"))
svglite(file = "~/desktop/out.svg", system_fonts = list("OpenSansEmoji"))
devtools::install_github("wch/webshot")
url("file://~/desktop/out.svg")
browseURLurl("file://~/desktop/out.svg")
browseURL("file://~/desktop/out.svg")
browseURL("file://~/desktop/out.svg")
browseURL("~/desktop/out.svg")
webshot("~/desktop/out.svg", "r.png")
require(webshot)
webshot("~/desktop/out.svg", "r.png")
f <- function(limit) {
emojis_filter <- emojis %>%
filter(emojis$n <= limit)
out <- paste0("emojis_",limit,".svg")
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,12)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
coord_flip() +
xlab("emoji")
print(p)
gridSVG::grid.export(out)
}
f(emojis$n[1])
webshot("content/post/emoji_57.svg", "r.png")
webshot("file://Users/LucyMcGowan/Desktop/out.svg", "~/desktop/r.png")
webshot("file:///Users/LucyMcGowan/Desktop/out.svg", "~/desktop/r.png")
emojis_filter <- emojis %>%
filter(emojis$n <= limit)
out <- paste0("~/desktop/emojis_",limit,".svg")
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,12)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
coord_flip() +
xlab("emoji")
print(p)
gridSVG::grid.export(out)
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,12)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
coord_flip() +
xlab("emoji")
print(p)
gridSVG::grid.export(out)
webshot("file:///Users/LucyMcGowan/Desktop/emojis_57.svg", "~/desktop/r.png")
base <- "/Users/LucyMcGowan/Documents/wonderland/live-free-or-dichotomize/data/images/"
f <- function(limit) {
emojis_filter <- emojis %>%
filter(emojis$n <= limit)
out <- paste0(base,"emojis_",limit,".svg")
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,12)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
coord_flip() +
xlab("emoji")
print(p)
gridSVG::grid.export(out)
webshot(paste0("files://", out ), paste0("files://", "emojis_", limit, ".png"))
}
f(emojis$n[1])
base <- "/Users/LucyMcGowan/Documents/wonderland/live-free-or-dichotomize/static/images/"
f <- function(limit) {
emojis_filter <- emojis %>%
filter(emojis$n <= limit)
out <- paste0(base,"emojis_",limit,".svg")
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,12)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
coord_flip() +
xlab("emoji")
print(p)
gridSVG::grid.export(out)
webshot(paste0("files://", out ), paste0("files://", "emojis_", limit, ".png"))
}
f(emojis$n[1])
webshot("files:///Users/LucyMcGowan/Documents/wonderland/live-free-or-dichotomize/static/images/emojis_57.svg", "files:///Users/LucyMcGowan/Desktop/out.png")
name <- "/Users/lucymcgowan/Documents/wonderland/live-free-or-dichotomize/static/images/emojis_57.svg"
webshot(paste0("file://", name))
f <- function(limit) {
emojis_filter <- emojis %>%
filter(emojis$n <= limit)
out <- paste0(base,"emojis_",limit,".svg")
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,12)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
coord_flip() +
xlab("emoji")
print(p)
gridSVG::grid.export(out)
webshot(paste0("file://", out ), paste0("file://", "emojis_", limit, ".png"))
}
f(emojis$n[1])
webshot(paste0("file://", name), "static/images/test.png")
f <- function(limit) {
emojis_filter <- emojis %>%
filter(emojis$n <= limit)
out <- paste0(base,"emojis_",limit,".svg")
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,12)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
coord_flip() +
xlab("emoji")
print(p)
gridSVG::grid.export(out)
webshot(paste0("file://", out ), paste0("file://",base, "emojis_", limit, ".png"))
}
f(emojis$n[1])
f <- function(limit) {
emojis_filter <- emojis %>%
filter(emojis$n <= limit)
out <- paste0(base,"emojis_",limit,".svg")
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,12)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
coord_flip() +
xlab("emoji")
print(p)
gridSVG::grid.export(out)
webshot(paste0("file://", out ), paste0("static/images/emojis_", limit, ".png"))
}
f(emojis$n[1])
out <- paste0(base,"emojis_",limit,".svg")
out
webshot(paste0("file://", out ), paste0("static/images/emojis_", limit, ".png"))
webshot(paste0("file://", out ), paste0("../../static/images/emojis_", limit, ".png"))
webshot(paste0("../../static/images/emoji_57.svg" ), paste0("../../static/images/emojis_", limit, ".png"))
f <- function(limit) {
emojis_filter <- emojis %>%
filter(emojis$n <= limit)
out_svg <- paste0(base,"emojis_",limit,".svg")
out_png <- paste0("../../static/images/emojis_", limit, ".png")
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,12)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
coord_flip() +
xlab("emoji")
print(p)
gridSVG::grid.export(out_svg)
webshot(out_svg, out_png)
out_png
}
out_png <- purrr::map_chr(emojis$n, f)
library("magick")
purrr::map(out_png, image_read) %>%
image_join() %>%
image_animate(fps=1) %>%
image_write("runconf_emojis.gif")
emojis$num <- 10:1
emojis$num
f <- function(limit) {
emojis_filter <- emojis %>%
filter(emojis$n <= limit)
out_svg <- paste0(base,"emojis_",limit,".svg")
out_png <- paste0("../../static/images/emojis_", limit, ".png")
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,12)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
coord_flip() +
xlab("emoji")
print(p)
gridSVG::grid.export(out_svg)
webshot(out_svg, out_png)
out_png
}
out_png <- purrr::map_chr(emojis$n, f)
out_png <- purrr::map_chr(emojis$n, f)
purrr::map(out_png, image_read) %>%
image_join() %>%
image_animate(fps=1) %>%
image_write("runconf_emojis.gif")
emojis <- regex_left_join(runconf_emojis, dico, by = c(text = "Native")) %>%
group_by(Native) %>%
filter(!is.na(Native)) %>%
summarise(n = n()) %>%
arrange(n) %>%
head(10)
emojis$num <- 1:10
f <- function(limit) {
emojis_filter <- emojis %>%
filter(emojis$n <= limit)
out_svg <- paste0(base,"emojis_",limit,".svg")
out_png <- paste0("../../static/images/emojis_", limit, ".png")
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,12)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
coord_flip() +
xlab("emoji")
print(p)
gridSVG::grid.export(out_svg)
webshot(out_svg, out_png)
out_png
}
out_png <- purrr::map_chr(emojis$n, f)
emojis <- regex_left_join(runconf_emojis, dico, by = c(text = "Native")) %>%
group_by(Native) %>%
filter(!is.na(Native)) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
emojis <- regex_left_join(runconf_emojis, dico, by = c(text = "Native")) %>%
group_by(Native) %>%
filter(!is.na(Native)) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
base <- "file:///Users/LucyMcGowan/Documents/wonderland/live-free-or-dichotomize/static/images/"
emojis$num <- 1:10
f <- function(limit) {
emojis_filter <- emojis %>%
filter(emojis$n <= limit)
out_svg <- paste0(base,"emojis_",limit,".svg")
out_png <- paste0("../../static/images/emojis_", limit, ".png")
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,12)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
coord_flip() +
xlab("emoji")
print(p)
gridSVG::grid.export(out_svg)
webshot(out_svg, out_png)
out_png
}
f <- function(limit) {
emojis_filter <- emojis %>%
filter(emojis$n <= limit)
out_svg <- paste0(base,"emojis_",limit,".svg")
out_png <- paste0("../../static/images/emojis_", limit, ".png")
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,12)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
coord_flip() +
xlab("emoji")
print(p)
gridSVG::grid.export(out_svg)
webshot(out_svg, out_png)
out_png
}
out_png <- purrr::map_chr(emojis$n, f)
out_png
rev(out_png)
purrr::map(rev(out_png), image_read) %>%
image_join() %>%
image_animate(fps=1) %>%
image_write("runconf_emojis.gif")
emojis <- regex_left_join(runconf_emojis, dico, by = c(text = "Native")) %>%
group_by(Native) %>%
filter(!is.na(Native)) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(20)
base <- "file:///Users/LucyMcGowan/Documents/wonderland/live-free-or-dichotomize/static/images/emojis/"
emojis$num <- 1:20
f <- function(limit) {
emojis_filter <- emojis %>%
filter(emojis$n <= limit)
out_svg <- paste0(base,"emojis_",limit,".svg")
out_png <- paste0("../../static/images/emojis/emojis_", limit, ".png")
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,22)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
coord_flip() +
xlab("emoji")
print(p)
gridSVG::grid.export(out_svg)
webshot(out_svg, out_png)
out_png
}
out_png <- purrr::map_chr(emojis$n, f)
out_png <- purrr::map_chr(emojis$n, f)
purrr::map(rev(out_png), image_read) %>%
image_join() %>%
image_animate(fps=1) %>%
image_write("runconf_emojis.gif")
View(emojis)
emojis <- regex_left_join(runconf_emojis, dico, by = c(text = "Native")) %>%
group_by(Native) %>%
filter(!is.na(Native)) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(15)
base <- "file:///Users/LucyMcGowan/Documents/wonderland/live-free-or-dichotomize/static/images/emojis/"
emojis$num <- 1:15
f <- function(limit) {
emojis_filter <- emojis %>%
filter(emojis$n <= limit)
out_svg <- paste0(base,"emojis_",limit,".svg")
out_png <- paste0("../../static/images/emojis/emojis_", limit, ".png")
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,16)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
coord_flip() +
xlab("emoji")
print(p)
gridSVG::grid.export(out_svg)
webshot(out_svg, out_png)
out_png
}
out_png <- purrr::map_chr(emojis$n, f)
purrr::map(rev(out_png), image_read) %>%
image_join() %>%
image_animate(fps=1) %>%
image_write("../../static/images/runconf_emojis.gif")
blogdown::serve_site()
?webshot
webshot(base)
webshot("file:///Users/LucyMcGowan/Desktop/emojis_57.svg", "file:///Users/LucyMcGowan/Desktop/out.png", vwidth = 100, vheight = 100)
webshot("file:///Users/LucyMcGowan/Desktop/emojis_57.svg", "file:///Users/LucyMcGowan/Desktop/out.pdf", vwidth = 100, vheight = 100)
webshot("file:///Users/LucyMcGowan/Desktop/emojis_57.svg", "file:///Users/LucyMcGowan/Desktop/out.jpg", vwidth = 100, vheight = 100)
webshot("file:///Users/LucyMcGowan/Desktop/emojis_57.svg", "file:///Users/LucyMcGowan/Desktop/out.png", vwidth = 100, vheight = 100, zoom = 2)
webshot("file:///Users/LucyMcGowan/Desktop/emojis_57.svg", "file:///Users/LucyMcGowan/Desktop/out.png", vwidth = 100, vheight = 100, zoom = 3)
emojis <- regex_left_join(runconf_emojis, dico, by = c(text = "Native")) %>%
group_by(Native) %>%
filter(!is.na(Native)) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(15)
base <- "file:///Users/LucyMcGowan/Documents/wonderland/live-free-or-dichotomize/static/images/emojis/"
emojis$num <- 1:15
f <- function(limit) {
emojis_filter <- emojis %>%
filter(emojis$n <= limit)
out_svg <- paste0(base,"emojis_", limit,".svg")
out_png <- paste0("../../static/images/emojis/emojis_", limit, ".png")
p <- ggplot(emojis_filter, aes(num, n)) +
geom_col() +
xlim(c(0,16)) +
geom_text(aes(x = num,
y = n + 1,
label = Native), size = 5)  +
theme(axis.text.y=element_blank(),
axis.ticks=element_blank(),
legend.position="none") +
ylim(c(0, max(emojis$n) + 10)) +
xlab("emoji") +
ggtitle("#runconf17 emojis") +
coord_flip()
print(p)
gridSVG::grid.export(out_svg)
webshot(out_svg,
out_png,
vwidth = 100,
vheight = 100,
zoom = 3)
out_png
}
out_png <- purrr::map_chr(emojis$n, f)
purrr::map(rev(out_png), image_read) %>%
image_join() %>%
image_animate(fps=1) %>%
image_write("../../static/images/runconf_emojis.gif")
emojis <- regex_left_join(runconf_emojis, dico, by = c(text = "Native")) %>%
group_by(Native) %>%
filter(!is.na(Native)) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>% mutate(num = 1:15) %>%
head(15)
emojis <- regex_left_join(runconf_emojis, dico, by = c(text = "Native")) %>%
group_by(Native) %>%
filter(!is.na(Native)) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(15) %>% mutate(num = 1:15)
View(emojis)
blogdown::serve_site()
purrr::map(unique(rev(out_png)), image_read) %>%
image_join() %>%
image_animate(fps=1) %>%
image_write("../../static/images/runconf_emojis.gif")
blogdown::serve_site()
blogdown::serve_site()
View(runconf_emojis)
length(unique(runconf_emojis$screen_name))
length(unique(used_emoji$screen_name))
load("../../static/data/runconf.rda")
load("../../static/data/rstats.rda")
runconf$runconf <- "yes"
rstats <- rstats %>%
mutate(runconf = ifelse(screen_name %in% runconf$screen_name, "yes", "no"))
data <- bind_rows(runconf, rstats) %>%
distinct(text, .keep_all = TRUE)
used_emoji <- regex_left_join(data, dico, by = c(text = "Native")) %>%
select(screen_name,
text,
runconf,
emoji = Native) %>%
group_by(screen_name) %>%
mutate(tot_emoji = sum(!is.na(emoji)),
used_emoji = ifelse(tot_emoji > 0, "yes", "no"),
tot_tweets = n_distinct(text)) %>%
distinct(screen_name, .keep_all = TRUE)
length(unique(used_emoji$screen_name))
View(used_emoji)
used_emoji[used_emoji$tot_emoji==max(used_emoji$tot_emoji)]
used_emoji[used_emoji$tot_emoji==max(used_emoji$tot_emoji),]
used_emoji[used_emoji$tot_emoji>15,]
used_emoji[used_emoji$tot_emoji>13,]
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()

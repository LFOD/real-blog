<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Live Free or Dichotomize</title>
    <link>/tags/javascript/index.xml</link>
    <description>Recent content in Javascript on Live Free or Dichotomize</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Custom JavaScript Visualizations in RMarkdown</title>
      <link>/2017/01/24/custom-javascript-visualizations-in-rmarkdown/</link>
      <pubDate>Tue, 24 Jan 2017 10:54:24 +0200</pubDate>
      
      <guid>/2017/01/24/custom-javascript-visualizations-in-rmarkdown/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I happened to stumble upon the &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/preview/&#34;&gt;preview release page&lt;/a&gt; for RStudio recently and noticed something that made me exorbitantly happy.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A preview release of RStudio v1.0.136 is now available for testing and feedback. This release includes… Support for JavaScript and CSS chunks in R Notebooks…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;“Support for JavaScript and CSS chunks in R Notebooks”&lt;/em&gt;! As someone who loves using javascript for plotting (and secretly for manipulating) data this is massively exciting. Previously my workflow for generating an interactive graphic would be something like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download data&lt;/li&gt;
&lt;li&gt;Clean data and do preliminary visualization in R&lt;/li&gt;
&lt;li&gt;Export what I liked to a csv file and make a new directory with a set of &lt;code&gt;.html, .js, .css&lt;/code&gt; files in it.&lt;/li&gt;
&lt;li&gt;Load data into javascript/d3.js in the new javascript file.&lt;/li&gt;
&lt;li&gt;Plot.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This workflow has served me very well, I did it probably 20 times a day when working at the New York Times and I am very fast with it. If you want to just make a stand alone visualization it’s fantastic, however, as a biostatistician who works with a lot of other biostatisticians, people tend to want to see where the data comes from.&lt;/p&gt;
&lt;p&gt;With Javascript chunks in &lt;code&gt;.Rmd&lt;/code&gt; files you can explicitly show the code for data gathering/cleaning etc. in a language that your collaborators can understand, along with making custom d3 charts with that data. All without ever leaving RStudio. I will show you my quick and dirty solution to doing so.&lt;/p&gt;
&lt;div id=&#34;getting-data-into-javascript&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting data into Javascript&lt;/h2&gt;
&lt;p&gt;Instead of generating a csv file in R and then loading that into javascript we will instead send the data directly through the html to javascript. (&lt;em&gt;Note:&lt;/em&gt; This wont work well with super large data).&lt;/p&gt;
&lt;p&gt;Inspired by &lt;a href=&#34;https://medium.com/@becausealice2/getting-r-and-d3-js-to-play-nicely-in-r-markdown-270e302a52d3#.772g93eb3&#34;&gt;this&lt;/a&gt; medium post I wrote a little function that takes a dataframe and sends it to the html document in the &lt;code&gt;.json&lt;/code&gt; format.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(jsonlite)

send_df_to_js &amp;lt;- function(df){
  cat(
    paste(
    &amp;#39;&amp;lt;script&amp;gt;
      var data = &amp;#39;,toJSON(df),&amp;#39;;
    &amp;lt;/script&amp;gt;&amp;#39;
    , sep=&amp;quot;&amp;quot;)
  )
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To illustrate how it works we will generate some random data into a dataframe.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Generate some random x and y data to plot
n &amp;lt;- 300
random_data &amp;lt;- data_frame(x = runif(n)*10) %&amp;gt;% 
  mutate(y = 0.5*x^3 - 1.3*x^2 + rnorm(n, mean = 0, sd = 80),
         group = paste(&amp;quot;group&amp;quot;, sample(c(1,2,3), n, replace = T)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we send a snippit of the dataframe into the function to see the output…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;random_data %&amp;gt;% 
  head() %&amp;gt;% 
  send_df_to_js()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;script&amp;gt;
##       var data = [{&amp;quot;x&amp;quot;:9.0216,&amp;quot;y&amp;quot;:222.9685,&amp;quot;group&amp;quot;:&amp;quot;group 1&amp;quot;},{&amp;quot;x&amp;quot;:0.6006,&amp;quot;y&amp;quot;:9.9356,&amp;quot;group&amp;quot;:&amp;quot;group 1&amp;quot;},{&amp;quot;x&amp;quot;:3.0546,&amp;quot;y&amp;quot;:-122.8976,&amp;quot;group&amp;quot;:&amp;quot;group 1&amp;quot;},{&amp;quot;x&amp;quot;:0.9057,&amp;quot;y&amp;quot;:-64.2103,&amp;quot;group&amp;quot;:&amp;quot;group 3&amp;quot;},{&amp;quot;x&amp;quot;:6.4326,&amp;quot;y&amp;quot;:142.0053,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;},{&amp;quot;x&amp;quot;:2.2905,&amp;quot;y&amp;quot;:-16.3018,&amp;quot;group&amp;quot;:&amp;quot;group 1&amp;quot;}];
##     &amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Beautiful, we have our data, in &lt;code&gt;json&lt;/code&gt; format, wrapped in a script tag. Now we can send the whole dataframe through. This time I am using the &lt;code&gt;results = &amp;quot;asis&amp;quot;&lt;/code&gt; option in the code chunk (&lt;code&gt;{r, results = &amp;quot;asis&amp;quot;}&lt;/code&gt;), to write the results directly to the html document and not to the output like we did above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Initiate data transfer protocol one
send_df_to_js(random_data)&lt;/code&gt;&lt;/pre&gt;
&lt;script&gt;
      var data = [{&#34;x&#34;:9.0216,&#34;y&#34;:222.9685,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.6006,&#34;y&#34;:9.9356,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.0546,&#34;y&#34;:-122.8976,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.9057,&#34;y&#34;:-64.2103,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.4326,&#34;y&#34;:142.0053,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.2905,&#34;y&#34;:-16.3018,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.3916,&#34;y&#34;:13.9029,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.9814,&#34;y&#34;:-95.6298,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.5583,&#34;y&#34;:102.9222,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.0405,&#34;y&#34;:-67.1994,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.5804,&#34;y&#34;:-104.2487,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.7187,&#34;y&#34;:314.8383,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.4402,&#34;y&#34;:346.2475,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.8915,&#34;y&#34;:197.5283,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.7726,&#34;y&#34;:167.2628,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.8187,&#34;y&#34;:213.1601,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.7678,&#34;y&#34;:101.3186,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.8403,&#34;y&#34;:81.866,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.9536,&#34;y&#34;:23.026,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.8917,&#34;y&#34;:265.7887,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.068,&#34;y&#34;:55.1774,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.7236,&#34;y&#34;:116.838,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.8774,&#34;y&#34;:-2.4693,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.8646,&#34;y&#34;:24.0904,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.345,&#34;y&#34;:21.1415,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.7247,&#34;y&#34;:-84.1283,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.025,&#34;y&#34;:69.9797,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.9169,&#34;y&#34;:-44.1495,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.1039,&#34;y&#34;:-109.358,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.6462,&#34;y&#34;:-121.5115,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.9859,&#34;y&#34;:97.3961,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.7489,&#34;y&#34;:373.4882,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.4054,&#34;y&#34;:184.2818,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.2733,&#34;y&#34;:83.7078,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.8521,&#34;y&#34;:-80.3322,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.5503,&#34;y&#34;:-135.0796,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.507,&#34;y&#34;:212.9559,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.6133,&#34;y&#34;:-37.3147,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.6686,&#34;y&#34;:155.0038,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.1176,&#34;y&#34;:319.0364,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.1678,&#34;y&#34;:76.1154,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.4255,&#34;y&#34;:42.5439,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.8307,&#34;y&#34;:264.4957,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.4491,&#34;y&#34;:-35.8844,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.3071,&#34;y&#34;:12.7316,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.7809,&#34;y&#34;:242.8978,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.2611,&#34;y&#34;:119.5508,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.287,&#34;y&#34;:121.1195,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.064,&#34;y&#34;:78.5039,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.2195,&#34;y&#34;:144.5719,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.176,&#34;y&#34;:43.5925,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.8784,&#34;y&#34;:24.8513,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.371,&#34;y&#34;:190.591,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.828,&#34;y&#34;:95.495,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.1149,&#34;y&#34;:-110.8222,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.818,&#34;y&#34;:98.0505,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.1429,&#34;y&#34;:144.1021,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.9225,&#34;y&#34;:56.934,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.8725,&#34;y&#34;:-42.196,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.756,&#34;y&#34;:-35.2968,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.735,&#34;y&#34;:119.2276,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.5712,&#34;y&#34;:219.4633,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.9458,&#34;y&#34;:289.018,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.7238,&#34;y&#34;:172.7187,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.9425,&#34;y&#34;:35.601,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.774,&#34;y&#34;:72.4483,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.1201,&#34;y&#34;:230.9889,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.6813,&#34;y&#34;:262.1399,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.2624,&#34;y&#34;:63.7411,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.6858,&#34;y&#34;:244.7743,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.9506,&#34;y&#34;:335.4084,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.0633,&#34;y&#34;:317.6658,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.0948,&#34;y&#34;:-43.6585,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.966,&#34;y&#34;:203.4688,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.4001,&#34;y&#34;:2.9606,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.4782,&#34;y&#34;:154.4535,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.6789,&#34;y&#34;:-250.8668,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.1537,&#34;y&#34;:316.2859,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.7477,&#34;y&#34;:-95.5261,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.7589,&#34;y&#34;:81.6131,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.2812,&#34;y&#34;:5.8226,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.532,&#34;y&#34;:19.7073,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.6328,&#34;y&#34;:284.3488,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.4092,&#34;y&#34;:159.6785,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.2087,&#34;y&#34;:253.5798,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.2156,&#34;y&#34;:224.1657,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.2952,&#34;y&#34;:240.3945,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.9788,&#34;y&#34;:-9.3298,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.7857,&#34;y&#34;:268.9012,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.5486,&#34;y&#34;:-50.328,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.5721,&#34;y&#34;:6.0411,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.9615,&#34;y&#34;:-69.1231,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.366,&#34;y&#34;:-44.4755,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.6015,&#34;y&#34;:-55.2615,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.5747,&#34;y&#34;:128.5243,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.7252,&#34;y&#34;:96.9727,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.3554,&#34;y&#34;:-116.683,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.8156,&#34;y&#34;:252.1999,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.0196,&#34;y&#34;:13.2857,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.7088,&#34;y&#34;:-48.8399,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.622,&#34;y&#34;:5.2204,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.3253,&#34;y&#34;:148.6907,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.9946,&#34;y&#34;:88.2048,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.7818,&#34;y&#34;:-13.029,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.6805,&#34;y&#34;:78.4552,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.5063,&#34;y&#34;:132.6481,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.5171,&#34;y&#34;:-17.5923,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.4928,&#34;y&#34;:166.2615,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.0254,&#34;y&#34;:-95.0788,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.5243,&#34;y&#34;:-73.9675,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.4498,&#34;y&#34;:81.6088,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.9958,&#34;y&#34;:115.9912,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.0339,&#34;y&#34;:271.4103,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.0159,&#34;y&#34;:243.4869,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.6282,&#34;y&#34;:38.4646,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.2286,&#34;y&#34;:109.4304,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.185,&#34;y&#34;:309.935,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.5126,&#34;y&#34;:-10.0225,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.5641,&#34;y&#34;:-118.583,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.3685,&#34;y&#34;:25.4468,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.7473,&#34;y&#34;:516.9187,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.8579,&#34;y&#34;:-72.1402,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.485,&#34;y&#34;:126.6604,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.0896,&#34;y&#34;:-84.0655,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.5899,&#34;y&#34;:132.3262,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.8671,&#34;y&#34;:38.8712,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.0962,&#34;y&#34;:-163.8604,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.9659,&#34;y&#34;:215.0182,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.4657,&#34;y&#34;:177.2739,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.3204,&#34;y&#34;:156.5855,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.9256,&#34;y&#34;:-23.7104,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.264,&#34;y&#34;:-161.7111,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.8884,&#34;y&#34;:326.9956,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.4511,&#34;y&#34;:79.7664,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.0595,&#34;y&#34;:319.4009,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.5649,&#34;y&#34;:163.7901,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.5954,&#34;y&#34;:230.0099,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.3757,&#34;y&#34;:298.4535,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.2249,&#34;y&#34;:-20.7649,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.1077,&#34;y&#34;:-15.039,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.79,&#34;y&#34;:346.0052,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.8041,&#34;y&#34;:143.225,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.0138,&#34;y&#34;:119.9302,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.2332,&#34;y&#34;:-130.1782,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.7027,&#34;y&#34;:-22.3554,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.1868,&#34;y&#34;:304.8441,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.1421,&#34;y&#34;:138.1884,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.7479,&#34;y&#34;:2.9484,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.8311,&#34;y&#34;:255.5884,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.2812,&#34;y&#34;:-42.4767,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.463,&#34;y&#34;:33.545,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.4093,&#34;y&#34;:327.4766,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.4518,&#34;y&#34;:56.6082,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.0564,&#34;y&#34;:21.3417,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.4226,&#34;y&#34;:-48.3795,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.3537,&#34;y&#34;:22.5992,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.1831,&#34;y&#34;:171.407,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.7386,&#34;y&#34;:207.3392,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.6243,&#34;y&#34;:-29.9474,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.1235,&#34;y&#34;:275.5536,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.9926,&#34;y&#34;:37.3474,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.2438,&#34;y&#34;:38.253,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.1502,&#34;y&#34;:21.4713,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.2043,&#34;y&#34;:-13.4531,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.653,&#34;y&#34;:264.8089,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.625,&#34;y&#34;:51.5361,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.2705,&#34;y&#34;:296.8221,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.2894,&#34;y&#34;:293.3679,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.8825,&#34;y&#34;:-31.522,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.9185,&#34;y&#34;:437.732,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.8885,&#34;y&#34;:75.5608,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.3862,&#34;y&#34;:136.8057,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.5478,&#34;y&#34;:44.2369,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.1738,&#34;y&#34;:36.2378,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.5978,&#34;y&#34;:-49.9704,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.3026,&#34;y&#34;:45.2546,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.9127,&#34;y&#34;:83.1339,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.2926,&#34;y&#34;:-34.6449,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.0668,&#34;y&#34;:14.6968,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.4086,&#34;y&#34;:135.6938,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.3996,&#34;y&#34;:90.2881,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.5339,&#34;y&#34;:108.6413,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.9068,&#34;y&#34;:216.9919,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.0353,&#34;y&#34;:298.0276,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.1214,&#34;y&#34;:32.0752,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.7635,&#34;y&#34;:7.2368,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.5658,&#34;y&#34;:93.1929,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.2942,&#34;y&#34;:31.4932,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.3197,&#34;y&#34;:-44.6477,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.9137,&#34;y&#34;:451.0337,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.3579,&#34;y&#34;:-108.1922,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.9371,&#34;y&#34;:120.7422,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.7193,&#34;y&#34;:41.2632,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.1007,&#34;y&#34;:54.3377,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.1063,&#34;y&#34;:289.9521,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.099,&#34;y&#34;:-21.4825,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.4722,&#34;y&#34;:266.9865,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.0778,&#34;y&#34;:155.0634,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.033,&#34;y&#34;:256.8789,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.3697,&#34;y&#34;:39.2782,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.7008,&#34;y&#34;:75.6502,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.3612,&#34;y&#34;:-51.733,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.194,&#34;y&#34;:39.0942,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.4767,&#34;y&#34;:333.9967,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.4568,&#34;y&#34;:26.3155,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.9352,&#34;y&#34;:-33.0179,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.2011,&#34;y&#34;:-10.256,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.4972,&#34;y&#34;:187.983,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.8913,&#34;y&#34;:28.9621,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.4526,&#34;y&#34;:412.1013,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.4491,&#34;y&#34;:41.3138,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.7262,&#34;y&#34;:37.3975,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.7907,&#34;y&#34;:354.0996,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.5554,&#34;y&#34;:5.549,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.8125,&#34;y&#34;:35.3989,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.7453,&#34;y&#34;:-34.202,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.5341,&#34;y&#34;:157.9223,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.0343,&#34;y&#34;:122.2288,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.6651,&#34;y&#34;:30.8121,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.807,&#34;y&#34;:362.2854,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.1914,&#34;y&#34;:25.418,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.8978,&#34;y&#34;:192.4579,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.7442,&#34;y&#34;:68.1463,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.1474,&#34;y&#34;:3.0644,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.9149,&#34;y&#34;:116.6014,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.573,&#34;y&#34;:126.4375,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.9334,&#34;y&#34;:-3.8311,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.508,&#34;y&#34;:105.7624,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.4128,&#34;y&#34;:74.2633,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.6035,&#34;y&#34;:-93.1005,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.9204,&#34;y&#34;:11.4718,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.2963,&#34;y&#34;:138.8309,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.0003,&#34;y&#34;:-30.1488,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.5635,&#34;y&#34;:75.7027,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.4765,&#34;y&#34;:269.3482,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.1699,&#34;y&#34;:25.902,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.6748,&#34;y&#34;:192.6589,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.2732,&#34;y&#34;:81.9285,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.0304,&#34;y&#34;:321.584,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.3265,&#34;y&#34;:-29.4048,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.5516,&#34;y&#34;:152.9653,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.6755,&#34;y&#34;:-8.6125,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.3112,&#34;y&#34;:21.074,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.9674,&#34;y&#34;:33.8323,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.3587,&#34;y&#34;:89.9,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.054,&#34;y&#34;:-71.5827,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.7807,&#34;y&#34;:150.0667,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.578,&#34;y&#34;:139.4402,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.3395,&#34;y&#34;:66.7631,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.9272,&#34;y&#34;:223.6762,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.3956,&#34;y&#34;:128.4768,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.0774,&#34;y&#34;:260.8803,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.8169,&#34;y&#34;:21.8382,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.5315,&#34;y&#34;:197.642,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.0605,&#34;y&#34;:27.4634,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.6437,&#34;y&#34;:-48.126,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.983,&#34;y&#34;:18.2744,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.7924,&#34;y&#34;:291.9048,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.3809,&#34;y&#34;:196.7689,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.8023,&#34;y&#34;:0.1811,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.1259,&#34;y&#34;:113.8661,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.2681,&#34;y&#34;:32.0344,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.7893,&#34;y&#34;:71.8921,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.0038,&#34;y&#34;:40.2277,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.3278,&#34;y&#34;:118.4079,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.7181,&#34;y&#34;:285.0848,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.6285,&#34;y&#34;:82.9041,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.2144,&#34;y&#34;:82.5185,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.962,&#34;y&#34;:509.1615,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.063,&#34;y&#34;:-22.6532,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.766,&#34;y&#34;:222.2274,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.1542,&#34;y&#34;:15.3807,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.9576,&#34;y&#34;:39.5987,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.8915,&#34;y&#34;:87.925,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.2805,&#34;y&#34;:94.1741,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.6611,&#34;y&#34;:121.1374,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.5466,&#34;y&#34;:-64.2389,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.121,&#34;y&#34;:275.1901,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.5758,&#34;y&#34;:-11.9856,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.1526,&#34;y&#34;:267.6128,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.928,&#34;y&#34;:156.7932,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.199,&#34;y&#34;:262.3788,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.2041,&#34;y&#34;:147.2561,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.0251,&#34;y&#34;:255.2062,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.0558,&#34;y&#34;:-91.395,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.4207,&#34;y&#34;:324.9865,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.0238,&#34;y&#34;:121.8606,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.941,&#34;y&#34;:111.3415,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.0242,&#34;y&#34;:9.5445,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.5739,&#34;y&#34;:-33.2989,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.1226,&#34;y&#34;:-164.3474,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.0774,&#34;y&#34;:62.1279,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.5517,&#34;y&#34;:19.5713,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.7353,&#34;y&#34;:-80.043,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.9097,&#34;y&#34;:29.079,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.9562,&#34;y&#34;:-64.6394,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.5246,&#34;y&#34;:54.8587,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.6914,&#34;y&#34;:-13.0466,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.224,&#34;y&#34;:4.8397,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.2562,&#34;y&#34;:72.422,&#34;group&#34;:&#34;group 3&#34;}];
    &lt;/script&gt;
&lt;p&gt;Now our data is inside our page’s javascript scope and ready to be played with!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;drawing-pretty-pictures&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Drawing pretty pictures&lt;/h2&gt;
&lt;p&gt;Let’s make a super simple d3 scatter plot to see this randomly generated data. All I have to do is include my desired javascript libraries, make a &lt;code&gt;div&lt;/code&gt; element for my visualization to go into and then put my &lt;code&gt;{js}&lt;/code&gt; block in. RMarkdown will slot the javascript into the page and we’re good to go.&lt;/p&gt;
&lt;p&gt;In this example I did…&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-3.1.1.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;https://d3js.org/d3.v4.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;div id = &amp;quot;viz&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; 

` ` `{js}
//code goes here
` ` `&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;did-it-work&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Did it work?&lt;/h2&gt;
&lt;script src=&#34;https://code.jquery.com/jquery-3.1.1.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://d3js.org/d3.v4.min.js&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;viz&#34;&gt;

&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
var point_vals = d3.select(&#34;#viz&#34;)
  .append(&#34;p&#34;)
  .attr(&#34;align&#34;, &#34;center&#34;)
  .text(&#34;Mouseover some data!&#34;);

//Get how wide our page is in pixels so we can draw our plot in it
var page_width = $(&#34;#did-it-work&#34;).width();
  
// set the dimensions and margins of the graph
var margin = 30,
    width = page_width - 2*margin,
    height = page_width*0.8 - 2*margin;
    
// Find max data values
var x_extent = d3.extent(data, d =&gt; d.x);
var y_extent = d3.extent(data, d =&gt; d.y);

// Set the scales 
var x = d3.scaleLinear()
  .domain(x_extent)
  .range([0, width]);
  
var y = d3.scaleLinear()
  .domain(y_extent)
  .range([height, 0]);

//Set up our SVG element
var svg = d3.select(&#34;#viz&#34;).append(&#34;svg&#34;)
    .attr(&#34;width&#34;, width + 2*margin)
    .attr(&#34;height&#34;, height + 2*margin)
  .append(&#34;g&#34;)
    .attr(&#34;transform&#34;,
          &#34;translate(&#34; + margin + &#34;,&#34; + margin + &#34;)&#34;);

var bounce_select = d3.transition()
    .duration(1000)
    .ease(d3.easeElastic.period(0.4));
    
// Add the scatterplot
svg.selectAll(&#34;.dots&#34;)
    .data(data)
  .enter().append(&#34;circle&#34;)
    .attr(&#34;class&#34;, &#34;dots&#34;)
    .attr(&#34;fill&#34;, d =&gt; d.group === &#34;group 1&#34;? &#34;steelblue&#34;:&#34;orangered&#34;)
    .attr(&#34;fill-opacity&#34;, 0.3)
    .attr(&#34;r&#34;, 5)
    .attr(&#34;cx&#34;, d =&gt; x(d.x) )
    .attr(&#34;cy&#34;, d =&gt; y(d.y) )
    .on(&#34;mouseover&#34;, function(d){
       d3.selectAll(&#34;.dots&#34;).attr(&#34;r&#34;, 5) //make sure all the dots are small
       d3.select(this)
        .transition(bounce_select)
        .attr(&#34;r&#34;, 10);
      
       point_vals.text(&#34;X:&#34; + d.x + &#34; Y:&#34; + d.y) //change the title of the graph to the datapoint
    });
    
// Draw the axes    
// Add the X Axis
svg.append(&#34;g&#34;)
    .attr(&#34;transform&#34;, &#34;translate(0,&#34; + height + &#34;)&#34;)
    .call(d3.axisBottom(x));

// Add the Y Axis
svg.append(&#34;g&#34;)
    .call(d3.axisLeft(y));
&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;why-when&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why/ When&lt;/h2&gt;
&lt;p&gt;This is a bad example of a visualization for this scenario as something like plotly could do this in much less effort. If you’re doing something more complicated/ bespoke then this is a great resource to have.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;addendum&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Addendum&lt;/h2&gt;
&lt;p&gt;If you’re interested, here’s the javascript code I included to make the above graph.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var point_vals = d3.select(&amp;quot;#viz&amp;quot;).append(&amp;quot;p&amp;quot;).text(&amp;quot;Mouseover some data!&amp;quot;);

//Get how wide our page is in pixels so we can draw our plot in it
var page_width = $(&amp;quot;#did-it-work&amp;quot;).width();
  
// set the dimensions and margins of the graph
var margin = 20,
    width = page_width - 2*margin,
    height = page_width*0.8 - 2*margin;
    
// Find max data values
var x_extent = d3.extent(data, d =&amp;gt; d.x);
var y_extent = d3.extent(data, d =&amp;gt; d.y);

// Set the scales 
var x = d3.scaleLinear()
  .domain(x_extent)
  .range([0, width]);
  
var y = d3.scaleLinear()
  .domain(y_extent)
  .range([height, 0]);

//Set up our SVG element
var svg = d3.select(&amp;quot;#viz&amp;quot;).append(&amp;quot;svg&amp;quot;)
    .attr(&amp;quot;width&amp;quot;, width + 2*margin)
    .attr(&amp;quot;height&amp;quot;, height + 2*margin)
  .append(&amp;quot;g&amp;quot;)
    .attr(&amp;quot;transform&amp;quot;,
          &amp;quot;translate(&amp;quot; + margin + &amp;quot;,&amp;quot; + margin + &amp;quot;)&amp;quot;);

var bounce_select = d3.transition()
    .duration(1000)
    .ease(d3.easeElastic.period(0.4));
    
// Add the scatterplot
svg.selectAll(&amp;quot;.dots&amp;quot;)
    .data(data)
  .enter().append(&amp;quot;circle&amp;quot;)
    .attr(&amp;quot;class&amp;quot;, &amp;quot;dots&amp;quot;)
    .attr(&amp;quot;fill&amp;quot;, d =&amp;gt; d.group === &amp;quot;group 1&amp;quot;? &amp;quot;steelblue&amp;quot;:&amp;quot;orangered&amp;quot;)
    .attr(&amp;quot;fill-opacity&amp;quot;, 0.3)
    .attr(&amp;quot;r&amp;quot;, 5)
    .attr(&amp;quot;cx&amp;quot;, d =&amp;gt; x(d.x) )
    .attr(&amp;quot;cy&amp;quot;, d =&amp;gt; y(d.y) )
    .on(&amp;quot;mouseover&amp;quot;, function(d){
       d3.selectAll(&amp;quot;.dots&amp;quot;).attr(&amp;quot;r&amp;quot;, 5) //make sure all the dots are small
       d3.select(this)
        .transition(bounce_select)
        .attr(&amp;quot;r&amp;quot;, 10);
      
       point_vals.text(&amp;quot;X:&amp;quot; + d.x + &amp;quot; Y:&amp;quot; + d.y) //change the title of the graph to the datapoint
    });
    
// Draw the axes    
// Add the X Axis
svg.append(&amp;quot;g&amp;quot;)
    .attr(&amp;quot;transform&amp;quot;, &amp;quot;translate(0,&amp;quot; + height + &amp;quot;)&amp;quot;)
    .call(d3.axisBottom(x));

// Add the Y Axis
svg.append(&amp;quot;g&amp;quot;)
    .call(d3.axisLeft(y));&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Live Free or Dichotomize</title>
    <link>/tags/javascript/index.xml</link>
    <description>Recent content on Live Free or Dichotomize</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Custom JavaScript Visualizations in RMarkdown</title>
      <link>/2017/01/24/custom-javascript-visualizations-in-rmarkdown/</link>
      <pubDate>Tue, 24 Jan 2017 10:54:24 +0200</pubDate>
      
      <guid>/2017/01/24/custom-javascript-visualizations-in-rmarkdown/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;I happened to stumble upon the &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/preview/&#34;&gt;preview release page&lt;/a&gt; for RStudio recently and noticed something that made me exorbitantly happy.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A preview release of RStudio v1.0.136 is now available for testing and feedback. This release includes… Support for JavaScript and CSS chunks in R Notebooks…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;“Support for JavaScript and CSS chunks in R Notebooks”&lt;/em&gt;! As someone who loves using javascript for plotting (and secretly for manipulating) data this is massively exciting. Previously my workflow for generating an interactive graphic would be something like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download data&lt;/li&gt;
&lt;li&gt;Clean data and do preliminary visualization in R&lt;/li&gt;
&lt;li&gt;Export what I liked to a csv file and make a new directory with a set of &lt;code&gt;.html, .js, .css&lt;/code&gt; files in it.&lt;/li&gt;
&lt;li&gt;Load data into javascript/d3.js in the new javascript file.&lt;/li&gt;
&lt;li&gt;Plot.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This workflow has served me very well, I did it probably 20 times a day when working at the New York Times and I am very fast with it. If you want to just make a stand alone visualization it’s fantastic, however, as a biostatistician who works with a lot of other biostatisticians, people tend to want to see where the data comes from.&lt;/p&gt;
&lt;p&gt;With Javascript chunks in &lt;code&gt;.Rmd&lt;/code&gt; files you can explicitly show the code for data gathering/cleaning etc. in a language that your collaborators can understand, along with making custom d3 charts with that data. All without ever leaving RStudio. I will show you my quick and dirty solution to doing so.&lt;/p&gt;
&lt;div id=&#34;getting-data-into-javascript&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting data into Javascript&lt;/h2&gt;
&lt;p&gt;Instead of generating a csv file in R and then loading that into javascript we will instead send the data directly through the html to javascript. (&lt;em&gt;Note:&lt;/em&gt; This wont work well with super large data).&lt;/p&gt;
&lt;p&gt;Inspired by &lt;a href=&#34;https://medium.com/@becausealice2/getting-r-and-d3-js-to-play-nicely-in-r-markdown-270e302a52d3#.772g93eb3&#34;&gt;this&lt;/a&gt; medium post I wrote a little function that takes a dataframe and sends it to the html document in the &lt;code&gt;.json&lt;/code&gt; format.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(jsonlite)

send_df_to_js &amp;lt;- function(df){
  cat(
    paste(
    &amp;#39;&amp;lt;script&amp;gt;
      var data = &amp;#39;,toJSON(df),&amp;#39;;
    &amp;lt;/script&amp;gt;&amp;#39;
    , sep=&amp;quot;&amp;quot;)
  )
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To illustrate how it works we will generate some random data into a dataframe.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Generate some random x and y data to plot
n &amp;lt;- 300
random_data &amp;lt;- data_frame(x = runif(n)*10) %&amp;gt;% 
  mutate(y = 0.5*x^3 - 1.3*x^2 + rnorm(n, mean = 0, sd = 80),
         group = paste(&amp;quot;group&amp;quot;, sample(c(1,2,3), n, replace = T)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we send a snippit of the dataframe into the function to see the output…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;random_data %&amp;gt;% 
  head() %&amp;gt;% 
  send_df_to_js()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;script&amp;gt;
##       var data = [{&amp;quot;x&amp;quot;:3.4073,&amp;quot;y&amp;quot;:20.2807,&amp;quot;group&amp;quot;:&amp;quot;group 3&amp;quot;},{&amp;quot;x&amp;quot;:3.5121,&amp;quot;y&amp;quot;:67.4045,&amp;quot;group&amp;quot;:&amp;quot;group 1&amp;quot;},{&amp;quot;x&amp;quot;:2.6635,&amp;quot;y&amp;quot;:-158.2888,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;},{&amp;quot;x&amp;quot;:5.2376,&amp;quot;y&amp;quot;:44.6978,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;},{&amp;quot;x&amp;quot;:9.1724,&amp;quot;y&amp;quot;:325.57,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;},{&amp;quot;x&amp;quot;:3.1168,&amp;quot;y&amp;quot;:119.3409,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;}];
##     &amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Beautiful, we have our data, in &lt;code&gt;json&lt;/code&gt; format, wrapped in a script tag. Now we can send the whole dataframe through. This time I am using the &lt;code&gt;results = &amp;quot;asis&amp;quot;&lt;/code&gt; option in the code chunk (&lt;code&gt;{r, results = &amp;quot;asis&amp;quot;}&lt;/code&gt;), to write the results directly to the html document and not to the output like we did above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Initiate data transfer protocol one
send_df_to_js(random_data)&lt;/code&gt;&lt;/pre&gt;
&lt;script&gt;
      var data = [{&#34;x&#34;:3.4073,&#34;y&#34;:20.2807,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.5121,&#34;y&#34;:67.4045,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.6635,&#34;y&#34;:-158.2888,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.2376,&#34;y&#34;:44.6978,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.1724,&#34;y&#34;:325.57,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.1168,&#34;y&#34;:119.3409,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.2427,&#34;y&#34;:5.6651,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.9128,&#34;y&#34;:107.5587,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.79,&#34;y&#34;:-51.6248,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.2577,&#34;y&#34;:-9.3679,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.124,&#34;y&#34;:146.0931,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.8391,&#34;y&#34;:27.381,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.5684,&#34;y&#34;:127.2484,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.9759,&#34;y&#34;:524.5169,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.3418,&#34;y&#34;:-92.3278,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.2418,&#34;y&#34;:183.0274,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.1312,&#34;y&#34;:15.0196,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.3699,&#34;y&#34;:315.6862,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.8297,&#34;y&#34;:53.2464,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.885,&#34;y&#34;:-58.6273,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.4689,&#34;y&#34;:58.3339,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.35,&#34;y&#34;:-46.321,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.9677,&#34;y&#34;:-88.3104,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.3228,&#34;y&#34;:214.2564,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.6988,&#34;y&#34;:76.8204,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.3139,&#34;y&#34;:33.8148,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.4784,&#34;y&#34;:-49.7953,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.5977,&#34;y&#34;:133.7857,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.293,&#34;y&#34;:150.4574,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.7974,&#34;y&#34;:-4.1098,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.0132,&#34;y&#34;:14.501,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.5852,&#34;y&#34;:76.2761,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.2574,&#34;y&#34;:138.4419,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.8716,&#34;y&#34;:80.3265,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.3056,&#34;y&#34;:-94.4438,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.9766,&#34;y&#34;:414.357,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.6291,&#34;y&#34;:101.4837,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.7583,&#34;y&#34;:-44.019,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.0046,&#34;y&#34;:105.8362,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.6529,&#34;y&#34;:468.1631,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.7722,&#34;y&#34;:100.6717,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.0693,&#34;y&#34;:74.7027,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.8044,&#34;y&#34;:-50.5672,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.8139,&#34;y&#34;:65.1361,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.3196,&#34;y&#34;:10.0708,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.4354,&#34;y&#34;:-3.4679,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.0166,&#34;y&#34;:99.4221,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.6792,&#34;y&#34;:105.5713,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.0618,&#34;y&#34;:-4.8474,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.3019,&#34;y&#34;:181.6571,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.8749,&#34;y&#34;:214.0564,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.7423,&#34;y&#34;:131.321,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.4676,&#34;y&#34;:15.9713,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.4954,&#34;y&#34;:306.3221,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.5514,&#34;y&#34;:427.2348,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.0133,&#34;y&#34;:71.7594,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.9576,&#34;y&#34;:94.7585,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.2991,&#34;y&#34;:-56.6981,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.9714,&#34;y&#34;:-224.4929,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.8401,&#34;y&#34;:-90.955,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.419,&#34;y&#34;:404.3427,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.0541,&#34;y&#34;:96.7965,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.8022,&#34;y&#34;:-69.2845,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.8716,&#34;y&#34;:30.9228,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.0968,&#34;y&#34;:233.0619,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.9635,&#34;y&#34;:32.7686,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.8058,&#34;y&#34;:292.665,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.2265,&#34;y&#34;:219.5722,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.9328,&#34;y&#34;:387.5522,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.4996,&#34;y&#34;:100.3266,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.5469,&#34;y&#34;:79.5947,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.5979,&#34;y&#34;:-66.258,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.6064,&#34;y&#34;:158.4186,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.9511,&#34;y&#34;:13.4401,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.6105,&#34;y&#34;:94.6436,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.8611,&#34;y&#34;:42.1213,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.4095,&#34;y&#34;:-35.3662,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.363,&#34;y&#34;:220.794,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.1372,&#34;y&#34;:242.4017,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.0264,&#34;y&#34;:-45.8017,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.9291,&#34;y&#34;:266.4743,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.249,&#34;y&#34;:-58.2617,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.5575,&#34;y&#34;:302.9571,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.1359,&#34;y&#34;:-36.7784,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.4243,&#34;y&#34;:60.1461,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.1396,&#34;y&#34;:6.8215,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.2915,&#34;y&#34;:53.884,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.9305,&#34;y&#34;:127.5119,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.9846,&#34;y&#34;:110.7616,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.4414,&#34;y&#34;:101.7452,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.5902,&#34;y&#34;:440.1814,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.236,&#34;y&#34;:15.5593,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.0969,&#34;y&#34;:-70.4903,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.4512,&#34;y&#34;:-13.232,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.8903,&#34;y&#34;:-10.5931,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.8372,&#34;y&#34;:-77.6883,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.0533,&#34;y&#34;:-66.0172,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.292,&#34;y&#34;:-68.3315,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.6235,&#34;y&#34;:155.0022,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.0233,&#34;y&#34;:-84.1585,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.1359,&#34;y&#34;:21.4288,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.9107,&#34;y&#34;:-24.4577,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.685,&#34;y&#34;:-66.3631,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.1189,&#34;y&#34;:-81.6252,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.8515,&#34;y&#34;:197.4248,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.5642,&#34;y&#34;:79.4904,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.6303,&#34;y&#34;:85.4586,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.1613,&#34;y&#34;:-5.4011,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.7477,&#34;y&#34;:3.1863,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.8383,&#34;y&#34;:279.1319,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.6809,&#34;y&#34;:335.6654,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.6552,&#34;y&#34;:87.2174,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.8819,&#34;y&#34;:51.1552,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.7923,&#34;y&#34;:39.4976,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.4427,&#34;y&#34;:8.3142,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.5419,&#34;y&#34;:208.7979,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.8465,&#34;y&#34;:83.8252,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.6794,&#34;y&#34;:-93.8796,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.1921,&#34;y&#34;:248.3414,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.4084,&#34;y&#34;:-126.4224,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.6822,&#34;y&#34;:118.3388,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.2259,&#34;y&#34;:60.8291,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.397,&#34;y&#34;:228.8698,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.2484,&#34;y&#34;:20.3469,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.4435,&#34;y&#34;:224.9141,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.0017,&#34;y&#34;:195.8811,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.711,&#34;y&#34;:114.7615,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.2588,&#34;y&#34;:187.9594,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.2354,&#34;y&#34;:52.4771,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.3115,&#34;y&#34;:-5.5871,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.8444,&#34;y&#34;:121.2024,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.2859,&#34;y&#34;:179.7103,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.2912,&#34;y&#34;:79.5918,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.7024,&#34;y&#34;:83.9132,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.6089,&#34;y&#34;:208.9166,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.668,&#34;y&#34;:162.9819,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.5622,&#34;y&#34;:150.5326,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.8893,&#34;y&#34;:71,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.2303,&#34;y&#34;:153.4741,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.2613,&#34;y&#34;:36.0744,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.0837,&#34;y&#34;:-126.2918,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.9809,&#34;y&#34;:-4.9767,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.0855,&#34;y&#34;:121.5878,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.9167,&#34;y&#34;:96.3602,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.6136,&#34;y&#34;:165.8234,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.5811,&#34;y&#34;:121.6941,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.6725,&#34;y&#34;:-18.0663,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.1731,&#34;y&#34;:79.4071,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.8604,&#34;y&#34;:318.6742,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.1002,&#34;y&#34;:20.903,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.721,&#34;y&#34;:-9.9906,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.1308,&#34;y&#34;:-62.4758,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.5642,&#34;y&#34;:45.9794,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.5871,&#34;y&#34;:135.2552,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.1797,&#34;y&#34;:-62.9548,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.3076,&#34;y&#34;:19.7462,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.858,&#34;y&#34;:357.7688,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.4749,&#34;y&#34;:-59.1924,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.1191,&#34;y&#34;:13.1299,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.6968,&#34;y&#34;:-106.4061,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.3523,&#34;y&#34;:103.9699,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.8836,&#34;y&#34;:36.9464,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.5318,&#34;y&#34;:155.4604,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.479,&#34;y&#34;:131.4834,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.9523,&#34;y&#34;:-80.5863,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.2082,&#34;y&#34;:-97.4798,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.0417,&#34;y&#34;:163.1972,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.4895,&#34;y&#34;:170.6771,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.9148,&#34;y&#34;:-30.1726,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.8026,&#34;y&#34;:308.7437,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.4749,&#34;y&#34;:56.5518,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.3221,&#34;y&#34;:50.8731,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.844,&#34;y&#34;:-75.2163,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.2034,&#34;y&#34;:126.7843,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.9956,&#34;y&#34;:345.4869,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.7637,&#34;y&#34;:34.7954,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.5212,&#34;y&#34;:-20.1607,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.5246,&#34;y&#34;:183.2691,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.858,&#34;y&#34;:203.5628,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.2667,&#34;y&#34;:-21.9337,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.1525,&#34;y&#34;:276.9016,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.684,&#34;y&#34;:-58.773,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.7765,&#34;y&#34;:-18.4021,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.0015,&#34;y&#34;:-126.281,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.3886,&#34;y&#34;:212.8169,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.0899,&#34;y&#34;:20.4268,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.4412,&#34;y&#34;:-30.8344,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.5317,&#34;y&#34;:-184.5061,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.8793,&#34;y&#34;:10.2222,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.2609,&#34;y&#34;:252.8212,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.1705,&#34;y&#34;:63.7914,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.1838,&#34;y&#34;:134.6564,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.4556,&#34;y&#34;:353.7604,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.6846,&#34;y&#34;:125.8455,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.3937,&#34;y&#34;:153.6011,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.6522,&#34;y&#34;:193.9519,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.7518,&#34;y&#34;:33.028,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.8561,&#34;y&#34;:-72.2178,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.839,&#34;y&#34;:-28.5384,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.6662,&#34;y&#34;:-22.4061,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.3762,&#34;y&#34;:6.6234,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.9673,&#34;y&#34;:-26.7714,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.8248,&#34;y&#34;:-25.5567,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.8997,&#34;y&#34;:-30.285,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.5098,&#34;y&#34;:-51.2293,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.7301,&#34;y&#34;:127.1472,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.7516,&#34;y&#34;:114.6375,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.9209,&#34;y&#34;:-52.2266,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.0975,&#34;y&#34;:265.9647,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.6115,&#34;y&#34;:147.2973,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.7122,&#34;y&#34;:-108.3055,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.8201,&#34;y&#34;:109.4394,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.8402,&#34;y&#34;:92.2332,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.471,&#34;y&#34;:35.3131,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.0981,&#34;y&#34;:121.8395,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.8205,&#34;y&#34;:-100.8091,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.4331,&#34;y&#34;:171.6732,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.1353,&#34;y&#34;:-56.4684,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.8308,&#34;y&#34;:379.5166,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.2709,&#34;y&#34;:-119.7821,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.9902,&#34;y&#34;:132.6278,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.1529,&#34;y&#34;:186.0555,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.7385,&#34;y&#34;:1.3979,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.0869,&#34;y&#34;:128.1582,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.8208,&#34;y&#34;:135.0005,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.9656,&#34;y&#34;:151.2716,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.4278,&#34;y&#34;:315.1657,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.6624,&#34;y&#34;:183.5556,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.5237,&#34;y&#34;:210.5188,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.7145,&#34;y&#34;:53.7687,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.4333,&#34;y&#34;:436.536,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.1404,&#34;y&#34;:2.0735,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.1046,&#34;y&#34;:108.0081,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.0039,&#34;y&#34;:-5.9235,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.6359,&#34;y&#34;:24.6561,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.7627,&#34;y&#34;:145.2757,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.2074,&#34;y&#34;:40.1283,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.6158,&#34;y&#34;:249.6726,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.0228,&#34;y&#34;:-31.695,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.3729,&#34;y&#34;:8.4004,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.9657,&#34;y&#34;:-92.056,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.8437,&#34;y&#34;:162.0323,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.6893,&#34;y&#34;:518.5598,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.924,&#34;y&#34;:301.294,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.5201,&#34;y&#34;:-83.2057,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.5142,&#34;y&#34;:86.7437,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.3759,&#34;y&#34;:-70.5609,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.133,&#34;y&#34;:-20.1029,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.9625,&#34;y&#34;:269.6025,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.3278,&#34;y&#34;:-6.0091,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.4055,&#34;y&#34;:4.0223,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.4021,&#34;y&#34;:121.2425,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.0272,&#34;y&#34;:200.3875,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.1424,&#34;y&#34;:141.618,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.267,&#34;y&#34;:100.3045,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.7936,&#34;y&#34;:32.8423,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.9554,&#34;y&#34;:24.2544,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.4215,&#34;y&#34;:-60.4401,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.4648,&#34;y&#34;:220.4003,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.5153,&#34;y&#34;:137.1068,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.7563,&#34;y&#34;:-116.5793,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.3419,&#34;y&#34;:166.2261,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.9826,&#34;y&#34;:317.8614,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.4633,&#34;y&#34;:-38.6456,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.8146,&#34;y&#34;:-21.5928,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.4461,&#34;y&#34;:192.1911,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.1,&#34;y&#34;:-43.4323,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.8733,&#34;y&#34;:172.3847,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.9341,&#34;y&#34;:457.9846,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.0485,&#34;y&#34;:-59.7227,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.2285,&#34;y&#34;:239.57,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.0411,&#34;y&#34;:282.7073,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.9947,&#34;y&#34;:-8.6247,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.9862,&#34;y&#34;:162.4654,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.4927,&#34;y&#34;:32.1009,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.728,&#34;y&#34;:-53.6931,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.8013,&#34;y&#34;:319.2863,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.4445,&#34;y&#34;:57.9628,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.5619,&#34;y&#34;:13.9677,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.7043,&#34;y&#34;:-97.9512,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.3962,&#34;y&#34;:-25.8204,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.6061,&#34;y&#34;:-45.4574,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.2645,&#34;y&#34;:232.2004,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.8251,&#34;y&#34;:143.6477,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.5039,&#34;y&#34;:-79.7614,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.2032,&#34;y&#34;:192.4684,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.8891,&#34;y&#34;:240.7556,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.6363,&#34;y&#34;:56.6818,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.6873,&#34;y&#34;:60.1795,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.212,&#34;y&#34;:95.7872,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.3033,&#34;y&#34;:-38.5083,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.7029,&#34;y&#34;:342.586,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.0474,&#34;y&#34;:41.8334,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.4055,&#34;y&#34;:26.7804,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.7784,&#34;y&#34;:52.8114,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.9619,&#34;y&#34;:373.074,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.6611,&#34;y&#34;:-40.2228,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.3175,&#34;y&#34;:153.8405,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.8529,&#34;y&#34;:150.3139,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.5982,&#34;y&#34;:-71.1485,&#34;group&#34;:&#34;group 2&#34;}];
    &lt;/script&gt;
&lt;p&gt;Now our data is inside our page’s javascript scope and ready to be played with!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;drawing-pretty-pictures&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Drawing pretty pictures&lt;/h2&gt;
&lt;p&gt;Let’s make a super simple d3 scatter plot to see this randomly generated data. All I have to do is include my desired javascript libraries, make a &lt;code&gt;div&lt;/code&gt; element for my visualization to go into and then put my &lt;code&gt;{js}&lt;/code&gt; block in. RMarkdown will slot the javascript into the page and we’re good to go.&lt;/p&gt;
&lt;p&gt;In this example I did…&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-3.1.1.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;https://d3js.org/d3.v4.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;div id = &amp;quot;viz&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; 

` ` `{js}
//code goes here
` ` `&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;did-it-work&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Did it work?&lt;/h2&gt;
&lt;script src=&#34;https://code.jquery.com/jquery-3.1.1.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://d3js.org/d3.v4.min.js&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;viz&#34;&gt;

&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
var point_vals = d3.select(&#34;#viz&#34;)
  .append(&#34;p&#34;)
  .attr(&#34;align&#34;, &#34;center&#34;)
  .text(&#34;Mouseover some data!&#34;);

//Get how wide our page is in pixels so we can draw our plot in it
var page_width = $(&#34;#did-it-work&#34;).width();
  
// set the dimensions and margins of the graph
var margin = 20,
    width = page_width - 2*margin,
    height = page_width*0.8 - 2*margin;
    
// Find max data values
var x_extent = d3.extent(data, d =&gt; d.x);
var y_extent = d3.extent(data, d =&gt; d.y);

// Set the scales 
var x = d3.scaleLinear()
  .domain(x_extent)
  .range([0, width]);
  
var y = d3.scaleLinear()
  .domain(y_extent)
  .range([height, 0]);

//Set up our SVG element
var svg = d3.select(&#34;#viz&#34;).append(&#34;svg&#34;)
    .attr(&#34;width&#34;, width + 2*margin)
    .attr(&#34;height&#34;, height + 2*margin)
  .append(&#34;g&#34;)
    .attr(&#34;transform&#34;,
          &#34;translate(&#34; + margin + &#34;,&#34; + margin + &#34;)&#34;);

var bounce_select = d3.transition()
    .duration(1000)
    .ease(d3.easeElastic.period(0.4));
    
// Add the scatterplot
svg.selectAll(&#34;.dots&#34;)
    .data(data)
  .enter().append(&#34;circle&#34;)
    .attr(&#34;class&#34;, &#34;dots&#34;)
    .attr(&#34;fill&#34;, d =&gt; d.group === &#34;group 1&#34;? &#34;steelblue&#34;:&#34;orangered&#34;)
    .attr(&#34;fill-opacity&#34;, 0.3)
    .attr(&#34;r&#34;, 5)
    .attr(&#34;cx&#34;, d =&gt; x(d.x) )
    .attr(&#34;cy&#34;, d =&gt; y(d.y) )
    .on(&#34;mouseover&#34;, function(d){
       d3.selectAll(&#34;.dots&#34;).attr(&#34;r&#34;, 5) //make sure all the dots are small
       d3.select(this)
        .transition(bounce_select)
        .attr(&#34;r&#34;, 10);
      
       point_vals.text(&#34;X:&#34; + d.x + &#34; Y:&#34; + d.y) //change the title of the graph to the datapoint
    });
    
// Draw the axes    
// Add the X Axis
svg.append(&#34;g&#34;)
    .attr(&#34;transform&#34;, &#34;translate(0,&#34; + height + &#34;)&#34;)
    .call(d3.axisBottom(x));

// Add the Y Axis
svg.append(&#34;g&#34;)
    .call(d3.axisLeft(y));
&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;why-when&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why/ When&lt;/h2&gt;
&lt;p&gt;This is a bad example of a visualization for this scenario as something like plotly could do this in much less effort. If you’re doing something more complicated/ bespoke then this is a great resource to have.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;addendum&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Addendum&lt;/h2&gt;
&lt;p&gt;If you’re interested, here’s the javascript code I included to make the above graph.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var point_vals = d3.select(&amp;quot;#viz&amp;quot;).append(&amp;quot;p&amp;quot;).text(&amp;quot;Mouseover some data!&amp;quot;);

//Get how wide our page is in pixels so we can draw our plot in it
var page_width = $(&amp;quot;#did-it-work&amp;quot;).width();
  
// set the dimensions and margins of the graph
var margin = 20,
    width = page_width - 2*margin,
    height = page_width*0.8 - 2*margin;
    
// Find max data values
var x_extent = d3.extent(data, d =&amp;gt; d.x);
var y_extent = d3.extent(data, d =&amp;gt; d.y);

// Set the scales 
var x = d3.scaleLinear()
  .domain(x_extent)
  .range([0, width]);
  
var y = d3.scaleLinear()
  .domain(y_extent)
  .range([height, 0]);

//Set up our SVG element
var svg = d3.select(&amp;quot;#viz&amp;quot;).append(&amp;quot;svg&amp;quot;)
    .attr(&amp;quot;width&amp;quot;, width + 2*margin)
    .attr(&amp;quot;height&amp;quot;, height + 2*margin)
  .append(&amp;quot;g&amp;quot;)
    .attr(&amp;quot;transform&amp;quot;,
          &amp;quot;translate(&amp;quot; + margin + &amp;quot;,&amp;quot; + margin + &amp;quot;)&amp;quot;);

var bounce_select = d3.transition()
    .duration(1000)
    .ease(d3.easeElastic.period(0.4));
    
// Add the scatterplot
svg.selectAll(&amp;quot;.dots&amp;quot;)
    .data(data)
  .enter().append(&amp;quot;circle&amp;quot;)
    .attr(&amp;quot;class&amp;quot;, &amp;quot;dots&amp;quot;)
    .attr(&amp;quot;fill&amp;quot;, d =&amp;gt; d.group === &amp;quot;group 1&amp;quot;? &amp;quot;steelblue&amp;quot;:&amp;quot;orangered&amp;quot;)
    .attr(&amp;quot;fill-opacity&amp;quot;, 0.3)
    .attr(&amp;quot;r&amp;quot;, 5)
    .attr(&amp;quot;cx&amp;quot;, d =&amp;gt; x(d.x) )
    .attr(&amp;quot;cy&amp;quot;, d =&amp;gt; y(d.y) )
    .on(&amp;quot;mouseover&amp;quot;, function(d){
       d3.selectAll(&amp;quot;.dots&amp;quot;).attr(&amp;quot;r&amp;quot;, 5) //make sure all the dots are small
       d3.select(this)
        .transition(bounce_select)
        .attr(&amp;quot;r&amp;quot;, 10);
      
       point_vals.text(&amp;quot;X:&amp;quot; + d.x + &amp;quot; Y:&amp;quot; + d.y) //change the title of the graph to the datapoint
    });
    
// Draw the axes    
// Add the X Axis
svg.append(&amp;quot;g&amp;quot;)
    .attr(&amp;quot;transform&amp;quot;, &amp;quot;translate(0,&amp;quot; + height + &amp;quot;)&amp;quot;)
    .call(d3.axisBottom(x));

// Add the Y Axis
svg.append(&amp;quot;g&amp;quot;)
    .call(d3.axisLeft(y));&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
  </channel>
</rss>
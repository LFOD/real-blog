<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Live Free or Dichotomize</title>
    <link>/tags/javascript/index.xml</link>
    <description>Recent content in Javascript on Live Free or Dichotomize</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Custom JavaScript Visualizations in RMarkdown</title>
      <link>/2017/01/24/custom-javascript-visualizations-in-rmarkdown/</link>
      <pubDate>Tue, 24 Jan 2017 10:54:24 +0200</pubDate>
      
      <guid>/2017/01/24/custom-javascript-visualizations-in-rmarkdown/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;I happened to stumble upon the &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/preview/&#34;&gt;preview release page&lt;/a&gt; for RStudio recently and noticed something that made me exorbitantly happy.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A preview release of RStudio v1.0.136 is now available for testing and feedback. This release includes… Support for JavaScript and CSS chunks in R Notebooks…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;“Support for JavaScript and CSS chunks in R Notebooks”&lt;/em&gt;! As someone who loves using javascript for plotting (and secretly for manipulating) data this is massively exciting. Previously my workflow for generating an interactive graphic would be something like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download data&lt;/li&gt;
&lt;li&gt;Clean data and do preliminary visualization in R&lt;/li&gt;
&lt;li&gt;Export what I liked to a csv file and make a new directory with a set of &lt;code&gt;.html, .js, .css&lt;/code&gt; files in it.&lt;/li&gt;
&lt;li&gt;Load data into javascript/d3.js in the new javascript file.&lt;/li&gt;
&lt;li&gt;Plot.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This workflow has served me very well, I did it probably 20 times a day when working at the New York Times and I am very fast with it. If you want to just make a stand alone visualization it’s fantastic, however, as a biostatistician who works with a lot of other biostatisticians, people tend to want to see where the data comes from.&lt;/p&gt;
&lt;p&gt;With Javascript chunks in &lt;code&gt;.Rmd&lt;/code&gt; files you can explicitly show the code for data gathering/cleaning etc. in a language that your collaborators can understand, along with making custom d3 charts with that data. All without ever leaving RStudio. I will show you my quick and dirty solution to doing so.&lt;/p&gt;
&lt;div id=&#34;getting-data-into-javascript&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting data into Javascript&lt;/h2&gt;
&lt;p&gt;Instead of generating a csv file in R and then loading that into javascript we will instead send the data directly through the html to javascript. (&lt;em&gt;Note:&lt;/em&gt; This wont work well with super large data).&lt;/p&gt;
&lt;p&gt;Inspired by &lt;a href=&#34;https://medium.com/@becausealice2/getting-r-and-d3-js-to-play-nicely-in-r-markdown-270e302a52d3#.772g93eb3&#34;&gt;this&lt;/a&gt; medium post I wrote a little function that takes a dataframe and sends it to the html document in the &lt;code&gt;.json&lt;/code&gt; format.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(jsonlite)

send_df_to_js &amp;lt;- function(df){
  cat(
    paste(
    &amp;#39;&amp;lt;script&amp;gt;
      var data = &amp;#39;,toJSON(df),&amp;#39;;
    &amp;lt;/script&amp;gt;&amp;#39;
    , sep=&amp;quot;&amp;quot;)
  )
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To illustrate how it works we will generate some random data into a dataframe.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Generate some random x and y data to plot
n &amp;lt;- 300
random_data &amp;lt;- data_frame(x = runif(n)*10) %&amp;gt;% 
  mutate(y = 0.5*x^3 - 1.3*x^2 + rnorm(n, mean = 0, sd = 80),
         group = paste(&amp;quot;group&amp;quot;, sample(c(1,2,3), n, replace = T)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we send a snippit of the dataframe into the function to see the output…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;random_data %&amp;gt;% 
  head() %&amp;gt;% 
  send_df_to_js()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;script&amp;gt;
##       var data = [{&amp;quot;x&amp;quot;:0.5637,&amp;quot;y&amp;quot;:250.4212,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;},{&amp;quot;x&amp;quot;:1.0181,&amp;quot;y&amp;quot;:138.4616,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;},{&amp;quot;x&amp;quot;:1.2886,&amp;quot;y&amp;quot;:-79.7694,&amp;quot;group&amp;quot;:&amp;quot;group 3&amp;quot;},{&amp;quot;x&amp;quot;:1.4468,&amp;quot;y&amp;quot;:49.7234,&amp;quot;group&amp;quot;:&amp;quot;group 3&amp;quot;},{&amp;quot;x&amp;quot;:4.2284,&amp;quot;y&amp;quot;:4.5494,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;},{&amp;quot;x&amp;quot;:2.647,&amp;quot;y&amp;quot;:-55.7435,&amp;quot;group&amp;quot;:&amp;quot;group 3&amp;quot;}];
##     &amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Beautiful, we have our data, in &lt;code&gt;json&lt;/code&gt; format, wrapped in a script tag. Now we can send the whole dataframe through. This time I am using the &lt;code&gt;results = &amp;quot;asis&amp;quot;&lt;/code&gt; option in the code chunk (&lt;code&gt;{r, results = &amp;quot;asis&amp;quot;}&lt;/code&gt;), to write the results directly to the html document and not to the output like we did above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Initiate data transfer protocol one
send_df_to_js(random_data)&lt;/code&gt;&lt;/pre&gt;
&lt;script&gt;
      var data = [{&#34;x&#34;:0.5637,&#34;y&#34;:250.4212,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.0181,&#34;y&#34;:138.4616,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.2886,&#34;y&#34;:-79.7694,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.4468,&#34;y&#34;:49.7234,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.2284,&#34;y&#34;:4.5494,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.647,&#34;y&#34;:-55.7435,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.94,&#34;y&#34;:356.5427,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.0905,&#34;y&#34;:-71.2757,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.4483,&#34;y&#34;:330.7585,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.1416,&#34;y&#34;:-3.0886,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.0246,&#34;y&#34;:-53.451,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.756,&#34;y&#34;:79.0919,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.7151,&#34;y&#34;:422.2419,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.7266,&#34;y&#34;:116.926,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.2738,&#34;y&#34;:117.6464,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.4471,&#34;y&#34;:34.5497,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.7681,&#34;y&#34;:352.1727,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.5827,&#34;y&#34;:-38.8242,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.1561,&#34;y&#34;:-47.8093,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.3975,&#34;y&#34;:-57.9132,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.5195,&#34;y&#34;:-88.592,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.979,&#34;y&#34;:288.6203,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.4236,&#34;y&#34;:-44.6869,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.8581,&#34;y&#34;:339.6865,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.4407,&#34;y&#34;:-8.2947,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.6078,&#34;y&#34;:58.8882,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.7967,&#34;y&#34;:-109.039,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.2842,&#34;y&#34;:228.3097,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.0678,&#34;y&#34;:-32.7416,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.0164,&#34;y&#34;:199.6191,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.8495,&#34;y&#34;:56.9396,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.2064,&#34;y&#34;:-40.4856,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.2004,&#34;y&#34;:449.5436,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.6589,&#34;y&#34;:-3.1706,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.4521,&#34;y&#34;:128.6039,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.0782,&#34;y&#34;:64.5688,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.5563,&#34;y&#34;:115.2992,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.4358,&#34;y&#34;:100.0872,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.4515,&#34;y&#34;:-38.5182,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.5253,&#34;y&#34;:247.6217,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.048,&#34;y&#34;:-29.6601,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.0845,&#34;y&#34;:31.7008,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.9284,&#34;y&#34;:66.0201,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.5452,&#34;y&#34;:156.9986,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.3165,&#34;y&#34;:123.5136,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.7608,&#34;y&#34;:113.4764,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.9853,&#34;y&#34;:-26.6626,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.7734,&#34;y&#34;:-148.5642,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.6821,&#34;y&#34;:186.011,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.3194,&#34;y&#34;:34.4595,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.9601,&#34;y&#34;:43.4357,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.7128,&#34;y&#34;:294.6767,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.8021,&#34;y&#34;:362.495,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.8572,&#34;y&#34;:-104.8628,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.7458,&#34;y&#34;:156.6314,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.182,&#34;y&#34;:230.258,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.85,&#34;y&#34;:167.7494,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.2836,&#34;y&#34;:122.1406,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.9343,&#34;y&#34;:47.2392,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.4279,&#34;y&#34;:80.2911,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.0228,&#34;y&#34;:57.1534,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.5684,&#34;y&#34;:-53.6824,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.6331,&#34;y&#34;:10.163,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.6076,&#34;y&#34;:30.3189,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.5013,&#34;y&#34;:203.4497,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.1594,&#34;y&#34;:24.5421,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.0259,&#34;y&#34;:-123.9951,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.9553,&#34;y&#34;:160.3923,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.85,&#34;y&#34;:-157.6154,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.636,&#34;y&#34;:213.044,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.9333,&#34;y&#34;:-94.2666,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.7694,&#34;y&#34;:171.3562,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.0414,&#34;y&#34;:-97.0465,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.9837,&#34;y&#34;:35.8217,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.2089,&#34;y&#34;:130.3607,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.8301,&#34;y&#34;:-69.3566,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.128,&#34;y&#34;:165.06,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.367,&#34;y&#34;:-27.0965,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.9793,&#34;y&#34;:-177.0017,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.3729,&#34;y&#34;:9.6709,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.6967,&#34;y&#34;:105.6357,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.674,&#34;y&#34;:25.8454,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.0181,&#34;y&#34;:30.8026,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.8964,&#34;y&#34;:141.4803,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.0383,&#34;y&#34;:9.5927,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.5191,&#34;y&#34;:-38.6219,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.4679,&#34;y&#34;:262.3225,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.9376,&#34;y&#34;:269.6319,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.8463,&#34;y&#34;:-67.6972,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.746,&#34;y&#34;:-75.4045,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.8977,&#34;y&#34;:105.0395,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.2406,&#34;y&#34;:-57.3197,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.7453,&#34;y&#34;:131.5968,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.2555,&#34;y&#34;:53.6977,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.1246,&#34;y&#34;:198.8374,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.9691,&#34;y&#34;:262.5028,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.7824,&#34;y&#34;:103.7106,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.1612,&#34;y&#34;:-17.3933,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.6344,&#34;y&#34;:-13.9471,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.4352,&#34;y&#34;:23.6981,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.5494,&#34;y&#34;:-58.8964,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.9147,&#34;y&#34;:62.5428,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.4624,&#34;y&#34;:238.0429,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.4967,&#34;y&#34;:-17.6951,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.0266,&#34;y&#34;:112.0706,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.5128,&#34;y&#34;:-14.082,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.3371,&#34;y&#34;:81.7601,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.3787,&#34;y&#34;:93.0514,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.7981,&#34;y&#34;:98.0424,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.0917,&#34;y&#34;:81.3499,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.2775,&#34;y&#34;:-134.8258,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.4503,&#34;y&#34;:-116.2684,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.594,&#34;y&#34;:-4.7969,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.138,&#34;y&#34;:-25.9565,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.8526,&#34;y&#34;:163.7348,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.9911,&#34;y&#34;:332.1419,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.3357,&#34;y&#34;:226.4234,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.2524,&#34;y&#34;:82.5672,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.4173,&#34;y&#34;:-14.184,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.2821,&#34;y&#34;:-19.5337,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.7112,&#34;y&#34;:102.7353,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.6656,&#34;y&#34;:319.5995,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.9444,&#34;y&#34;:178.8225,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.4707,&#34;y&#34;:79.3678,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.1756,&#34;y&#34;:384.4184,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.1563,&#34;y&#34;:-79.2414,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.7004,&#34;y&#34;:-0.8882,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.4991,&#34;y&#34;:187.5837,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.3805,&#34;y&#34;:66.6579,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.587,&#34;y&#34;:61.0759,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.8831,&#34;y&#34;:232.1093,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.0014,&#34;y&#34;:2.3783,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.9799,&#34;y&#34;:103.7552,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.9072,&#34;y&#34;:63.8065,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.4696,&#34;y&#34;:155.6033,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.0538,&#34;y&#34;:-61.9578,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.8943,&#34;y&#34;:74.1884,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.9566,&#34;y&#34;:-73.9748,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.9792,&#34;y&#34;:197.5298,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.1112,&#34;y&#34;:11.1082,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.4886,&#34;y&#34;:146.9226,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.2468,&#34;y&#34;:35.0742,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.4801,&#34;y&#34;:-79.9909,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.0193,&#34;y&#34;:154.825,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.2412,&#34;y&#34;:-11.4504,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.461,&#34;y&#34;:254.7797,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.8511,&#34;y&#34;:60.3563,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.1965,&#34;y&#34;:108.6898,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.8369,&#34;y&#34;:269.5012,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.7224,&#34;y&#34;:154.7586,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.3934,&#34;y&#34;:93.4348,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.6737,&#34;y&#34;:-4.8937,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.1101,&#34;y&#34;:117.2789,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.694,&#34;y&#34;:57.5793,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.9386,&#34;y&#34;:68.7437,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.0059,&#34;y&#34;:17.2924,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.0783,&#34;y&#34;:-27.5292,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.9057,&#34;y&#34;:73.0848,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.1003,&#34;y&#34;:33.1664,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.4509,&#34;y&#34;:-19.3527,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.4601,&#34;y&#34;:7.6846,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.6775,&#34;y&#34;:98.709,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.11,&#34;y&#34;:-36.0843,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.1509,&#34;y&#34;:-15.9839,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.2258,&#34;y&#34;:64.1045,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.1585,&#34;y&#34;:329.1495,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.6513,&#34;y&#34;:120.3951,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.5297,&#34;y&#34;:-40.5299,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.0063,&#34;y&#34;:397.1568,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.6261,&#34;y&#34;:104.5583,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.8705,&#34;y&#34;:-48.9142,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.0425,&#34;y&#34;:-10.7111,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.7999,&#34;y&#34;:-31.2873,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.2917,&#34;y&#34;:90.6279,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.7877,&#34;y&#34;:-5.1813,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.1199,&#34;y&#34;:-60.8143,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.0901,&#34;y&#34;:90.0493,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.2734,&#34;y&#34;:-31.59,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.1947,&#34;y&#34;:49.6786,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.6451,&#34;y&#34;:131.4796,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.0925,&#34;y&#34;:138.0222,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.6246,&#34;y&#34;:22.8566,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.2309,&#34;y&#34;:-34.7613,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.7514,&#34;y&#34;:72.611,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.6908,&#34;y&#34;:-25.5932,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.9661,&#34;y&#34;:-0.8001,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.9133,&#34;y&#34;:284.8522,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.0089,&#34;y&#34;:-12.2097,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.1081,&#34;y&#34;:148.2519,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.8721,&#34;y&#34;:27.2416,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.8246,&#34;y&#34;:-71.818,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.1569,&#34;y&#34;:66.1114,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.3766,&#34;y&#34;:113.4087,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.2275,&#34;y&#34;:186.0408,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.0923,&#34;y&#34;:219.5552,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.8476,&#34;y&#34;:138.0787,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.8219,&#34;y&#34;:76.3829,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.8077,&#34;y&#34;:90.8315,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.6512,&#34;y&#34;:-149.7535,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.2312,&#34;y&#34;:57.9472,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.9553,&#34;y&#34;:167.4442,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.6426,&#34;y&#34;:85.0358,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.965,&#34;y&#34;:233.0486,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.9414,&#34;y&#34;:-175.972,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.5091,&#34;y&#34;:-3.9425,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.0543,&#34;y&#34;:145.5018,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.2256,&#34;y&#34;:-41.9061,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.9764,&#34;y&#34;:99.4635,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.6815,&#34;y&#34;:-22.0315,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.4326,&#34;y&#34;:326.4869,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.7227,&#34;y&#34;:111.0416,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.4454,&#34;y&#34;:14.2545,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.7108,&#34;y&#34;:384.6097,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.8677,&#34;y&#34;:-35.4516,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.2403,&#34;y&#34;:-38.7543,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.0719,&#34;y&#34;:97.7416,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.1455,&#34;y&#34;:23.9323,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.923,&#34;y&#34;:54.8844,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.0706,&#34;y&#34;:82.8801,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.7439,&#34;y&#34;:169.2989,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.2547,&#34;y&#34;:153.0825,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.6396,&#34;y&#34;:263.1648,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.0768,&#34;y&#34;:-101.8698,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.2966,&#34;y&#34;:39.9956,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.2493,&#34;y&#34;:-158.4111,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.6241,&#34;y&#34;:26.6018,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.189,&#34;y&#34;:89.2493,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.4834,&#34;y&#34;:168.7492,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.2537,&#34;y&#34;:113.2116,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.7178,&#34;y&#34;:-25.752,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.7341,&#34;y&#34;:346.5892,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.0695,&#34;y&#34;:176.4712,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.675,&#34;y&#34;:145.4661,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.0502,&#34;y&#34;:115.0773,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.6326,&#34;y&#34;:99.422,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.3026,&#34;y&#34;:148.9513,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.9802,&#34;y&#34;:486.8194,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.0675,&#34;y&#34;:-7.5666,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.6584,&#34;y&#34;:56.8862,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.6365,&#34;y&#34;:-51.0628,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.227,&#34;y&#34;:171.5374,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.3982,&#34;y&#34;:25.926,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.2471,&#34;y&#34;:216.4627,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.9557,&#34;y&#34;:333.8622,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.3405,&#34;y&#34;:56.4063,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.7597,&#34;y&#34;:188.4701,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.7716,&#34;y&#34;:-129.8218,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.2442,&#34;y&#34;:15.8381,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.3692,&#34;y&#34;:-58.8831,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.7945,&#34;y&#34;:361.896,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.8054,&#34;y&#34;:143.139,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.1732,&#34;y&#34;:-49.0391,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.4932,&#34;y&#34;:58.2431,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.3229,&#34;y&#34;:-26.8201,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.1264,&#34;y&#34;:44.8006,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.6256,&#34;y&#34;:98.1153,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.2181,&#34;y&#34;:67.6983,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.7966,&#34;y&#34;:71.3405,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.4266,&#34;y&#34;:158.3334,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.2946,&#34;y&#34;:155.9638,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.686,&#34;y&#34;:-80.1732,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.0977,&#34;y&#34;:8.4476,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.1498,&#34;y&#34;:59.1976,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.1124,&#34;y&#34;:122.41,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.8007,&#34;y&#34;:-7.0791,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.0747,&#34;y&#34;:-49.8187,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.1004,&#34;y&#34;:-103.3608,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.2098,&#34;y&#34;:36.7396,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.1051,&#34;y&#34;:-2.3019,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.4677,&#34;y&#34;:46.1545,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.4555,&#34;y&#34;:68.7511,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.1174,&#34;y&#34;:16.1082,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.297,&#34;y&#34;:-48.0008,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.1218,&#34;y&#34;:-57.1203,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.3989,&#34;y&#34;:104.5959,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.0945,&#34;y&#34;:-55.8108,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.4409,&#34;y&#34;:-23.242,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.6752,&#34;y&#34;:46.0771,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.8733,&#34;y&#34;:-100.6278,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.2569,&#34;y&#34;:59.8121,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.2075,&#34;y&#34;:42.1916,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.2806,&#34;y&#34;:-75.978,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.8176,&#34;y&#34;:64.4836,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.1433,&#34;y&#34;:133.1396,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.6979,&#34;y&#34;:102.9104,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.2178,&#34;y&#34;:-21.8452,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.3348,&#34;y&#34;:263.9598,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.7831,&#34;y&#34;:-33.8189,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.9789,&#34;y&#34;:501.472,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.7756,&#34;y&#34;:182.5158,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.7958,&#34;y&#34;:26.1611,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.9677,&#34;y&#34;:291.9622,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.7183,&#34;y&#34;:-74.5009,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.2222,&#34;y&#34;:214.6562,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.338,&#34;y&#34;:78.8093,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.1022,&#34;y&#34;:210.7882,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.8456,&#34;y&#34;:474.7601,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.4039,&#34;y&#34;:-24.0122,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.0233,&#34;y&#34;:66.4296,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.2912,&#34;y&#34;:289.921,&#34;group&#34;:&#34;group 1&#34;}];
    &lt;/script&gt;
&lt;p&gt;Now our data is inside our page’s javascript scope and ready to be played with!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;drawing-pretty-pictures&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Drawing pretty pictures&lt;/h2&gt;
&lt;p&gt;Let’s make a super simple d3 scatter plot to see this randomly generated data. All I have to do is include my desired javascript libraries, make a &lt;code&gt;div&lt;/code&gt; element for my visualization to go into and then put my &lt;code&gt;{js}&lt;/code&gt; block in. RMarkdown will slot the javascript into the page and we’re good to go.&lt;/p&gt;
&lt;p&gt;In this example I did…&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-3.1.1.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;https://d3js.org/d3.v4.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;div id = &amp;quot;viz&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; 

` ` `{js}
//code goes here
` ` `&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;did-it-work&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Did it work?&lt;/h2&gt;
&lt;script src=&#34;https://code.jquery.com/jquery-3.1.1.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://d3js.org/d3.v4.min.js&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;viz&#34;&gt;

&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
var point_vals = d3.select(&#34;#viz&#34;)
  .append(&#34;p&#34;)
  .attr(&#34;align&#34;, &#34;center&#34;)
  .text(&#34;Mouseover some data!&#34;);

//Get how wide our page is in pixels so we can draw our plot in it
var page_width = $(&#34;#did-it-work&#34;).width();
  
// set the dimensions and margins of the graph
var margin = 30,
    width = page_width - 2*margin,
    height = page_width*0.8 - 2*margin;
    
// Find max data values
var x_extent = d3.extent(data, d =&gt; d.x);
var y_extent = d3.extent(data, d =&gt; d.y);

// Set the scales 
var x = d3.scaleLinear()
  .domain(x_extent)
  .range([0, width]);
  
var y = d3.scaleLinear()
  .domain(y_extent)
  .range([height, 0]);

//Set up our SVG element
var svg = d3.select(&#34;#viz&#34;).append(&#34;svg&#34;)
    .attr(&#34;width&#34;, width + 2*margin)
    .attr(&#34;height&#34;, height + 2*margin)
  .append(&#34;g&#34;)
    .attr(&#34;transform&#34;,
          &#34;translate(&#34; + margin + &#34;,&#34; + margin + &#34;)&#34;);

var bounce_select = d3.transition()
    .duration(1000)
    .ease(d3.easeElastic.period(0.4));
    
// Add the scatterplot
svg.selectAll(&#34;.dots&#34;)
    .data(data)
  .enter().append(&#34;circle&#34;)
    .attr(&#34;class&#34;, &#34;dots&#34;)
    .attr(&#34;fill&#34;, d =&gt; d.group === &#34;group 1&#34;? &#34;steelblue&#34;:&#34;orangered&#34;)
    .attr(&#34;fill-opacity&#34;, 0.3)
    .attr(&#34;r&#34;, 5)
    .attr(&#34;cx&#34;, d =&gt; x(d.x) )
    .attr(&#34;cy&#34;, d =&gt; y(d.y) )
    .on(&#34;mouseover&#34;, function(d){
       d3.selectAll(&#34;.dots&#34;).attr(&#34;r&#34;, 5) //make sure all the dots are small
       d3.select(this)
        .transition(bounce_select)
        .attr(&#34;r&#34;, 10);
      
       point_vals.text(&#34;X:&#34; + d.x + &#34; Y:&#34; + d.y) //change the title of the graph to the datapoint
    });
    
// Draw the axes    
// Add the X Axis
svg.append(&#34;g&#34;)
    .attr(&#34;transform&#34;, &#34;translate(0,&#34; + height + &#34;)&#34;)
    .call(d3.axisBottom(x));

// Add the Y Axis
svg.append(&#34;g&#34;)
    .call(d3.axisLeft(y));
&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;why-when&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why/ When&lt;/h2&gt;
&lt;p&gt;This is a bad example of a visualization for this scenario as something like plotly could do this in much less effort. If you’re doing something more complicated/ bespoke then this is a great resource to have.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;addendum&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Addendum&lt;/h2&gt;
&lt;p&gt;If you’re interested, here’s the javascript code I included to make the above graph.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var point_vals = d3.select(&amp;quot;#viz&amp;quot;).append(&amp;quot;p&amp;quot;).text(&amp;quot;Mouseover some data!&amp;quot;);

//Get how wide our page is in pixels so we can draw our plot in it
var page_width = $(&amp;quot;#did-it-work&amp;quot;).width();
  
// set the dimensions and margins of the graph
var margin = 20,
    width = page_width - 2*margin,
    height = page_width*0.8 - 2*margin;
    
// Find max data values
var x_extent = d3.extent(data, d =&amp;gt; d.x);
var y_extent = d3.extent(data, d =&amp;gt; d.y);

// Set the scales 
var x = d3.scaleLinear()
  .domain(x_extent)
  .range([0, width]);
  
var y = d3.scaleLinear()
  .domain(y_extent)
  .range([height, 0]);

//Set up our SVG element
var svg = d3.select(&amp;quot;#viz&amp;quot;).append(&amp;quot;svg&amp;quot;)
    .attr(&amp;quot;width&amp;quot;, width + 2*margin)
    .attr(&amp;quot;height&amp;quot;, height + 2*margin)
  .append(&amp;quot;g&amp;quot;)
    .attr(&amp;quot;transform&amp;quot;,
          &amp;quot;translate(&amp;quot; + margin + &amp;quot;,&amp;quot; + margin + &amp;quot;)&amp;quot;);

var bounce_select = d3.transition()
    .duration(1000)
    .ease(d3.easeElastic.period(0.4));
    
// Add the scatterplot
svg.selectAll(&amp;quot;.dots&amp;quot;)
    .data(data)
  .enter().append(&amp;quot;circle&amp;quot;)
    .attr(&amp;quot;class&amp;quot;, &amp;quot;dots&amp;quot;)
    .attr(&amp;quot;fill&amp;quot;, d =&amp;gt; d.group === &amp;quot;group 1&amp;quot;? &amp;quot;steelblue&amp;quot;:&amp;quot;orangered&amp;quot;)
    .attr(&amp;quot;fill-opacity&amp;quot;, 0.3)
    .attr(&amp;quot;r&amp;quot;, 5)
    .attr(&amp;quot;cx&amp;quot;, d =&amp;gt; x(d.x) )
    .attr(&amp;quot;cy&amp;quot;, d =&amp;gt; y(d.y) )
    .on(&amp;quot;mouseover&amp;quot;, function(d){
       d3.selectAll(&amp;quot;.dots&amp;quot;).attr(&amp;quot;r&amp;quot;, 5) //make sure all the dots are small
       d3.select(this)
        .transition(bounce_select)
        .attr(&amp;quot;r&amp;quot;, 10);
      
       point_vals.text(&amp;quot;X:&amp;quot; + d.x + &amp;quot; Y:&amp;quot; + d.y) //change the title of the graph to the datapoint
    });
    
// Draw the axes    
// Add the X Axis
svg.append(&amp;quot;g&amp;quot;)
    .attr(&amp;quot;transform&amp;quot;, &amp;quot;translate(0,&amp;quot; + height + &amp;quot;)&amp;quot;)
    .call(d3.axisBottom(x));

// Add the Y Axis
svg.append(&amp;quot;g&amp;quot;)
    .call(d3.axisLeft(y));&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
  </channel>
</rss>
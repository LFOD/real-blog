<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visualization on Live Free or Dichotomize</title>
    <link>/tags/visualization/index.xml</link>
    <description>Recent content in Visualization on Live Free or Dichotomize</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/tags/visualization/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Custom JavaScript Visualizations in RMarkdown</title>
      <link>/2017/01/24/custom-javascript-visualizations-in-rmarkdown/</link>
      <pubDate>Tue, 24 Jan 2017 10:54:24 +0200</pubDate>
      
      <guid>/2017/01/24/custom-javascript-visualizations-in-rmarkdown/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;I happened to stumble upon the &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/preview/&#34;&gt;preview release page&lt;/a&gt; for RStudio recently and noticed something that made me exorbitantly happy.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A preview release of RStudio v1.0.136 is now available for testing and feedback. This release includes… Support for JavaScript and CSS chunks in R Notebooks…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;“Support for JavaScript and CSS chunks in R Notebooks”&lt;/em&gt;! As someone who loves using javascript for plotting (and secretly for manipulating) data this is massively exciting. Previously my workflow for generating an interactive graphic would be something like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download data&lt;/li&gt;
&lt;li&gt;Clean data and do preliminary visualization in R&lt;/li&gt;
&lt;li&gt;Export what I liked to a csv file and make a new directory with a set of &lt;code&gt;.html, .js, .css&lt;/code&gt; files in it.&lt;/li&gt;
&lt;li&gt;Load data into javascript/d3.js in the new javascript file.&lt;/li&gt;
&lt;li&gt;Plot.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This workflow has served me very well, I did it probably 20 times a day when working at the New York Times and I am very fast with it. If you want to just make a stand alone visualization it’s fantastic, however, as a biostatistician who works with a lot of other biostatisticians, people tend to want to see where the data comes from.&lt;/p&gt;
&lt;p&gt;With Javascript chunks in &lt;code&gt;.Rmd&lt;/code&gt; files you can explicitly show the code for data gathering/cleaning etc. in a language that your collaborators can understand, along with making custom d3 charts with that data. All without ever leaving RStudio. I will show you my quick and dirty solution to doing so.&lt;/p&gt;
&lt;div id=&#34;getting-data-into-javascript&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting data into Javascript&lt;/h2&gt;
&lt;p&gt;Instead of generating a csv file in R and then loading that into javascript we will instead send the data directly through the html to javascript. (&lt;em&gt;Note:&lt;/em&gt; This wont work well with super large data).&lt;/p&gt;
&lt;p&gt;Inspired by &lt;a href=&#34;https://medium.com/@becausealice2/getting-r-and-d3-js-to-play-nicely-in-r-markdown-270e302a52d3#.772g93eb3&#34;&gt;this&lt;/a&gt; medium post I wrote a little function that takes a dataframe and sends it to the html document in the &lt;code&gt;.json&lt;/code&gt; format.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(jsonlite)

send_df_to_js &amp;lt;- function(df){
  cat(
    paste(
    &amp;#39;&amp;lt;script&amp;gt;
      var data = &amp;#39;,toJSON(df),&amp;#39;;
    &amp;lt;/script&amp;gt;&amp;#39;
    , sep=&amp;quot;&amp;quot;)
  )
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To illustrate how it works we will generate some random data into a dataframe.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Generate some random x and y data to plot
n &amp;lt;- 300
random_data &amp;lt;- data_frame(x = runif(n)*10) %&amp;gt;% 
  mutate(y = 0.5*x^3 - 1.3*x^2 + rnorm(n, mean = 0, sd = 80),
         group = paste(&amp;quot;group&amp;quot;, sample(c(1,2,3), n, replace = T)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we send a snippit of the dataframe into the function to see the output…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;random_data %&amp;gt;% 
  head() %&amp;gt;% 
  send_df_to_js()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;script&amp;gt;
##       var data = [{&amp;quot;x&amp;quot;:5.1672,&amp;quot;y&amp;quot;:87.3694,&amp;quot;group&amp;quot;:&amp;quot;group 3&amp;quot;},{&amp;quot;x&amp;quot;:0.1433,&amp;quot;y&amp;quot;:-54.6532,&amp;quot;group&amp;quot;:&amp;quot;group 1&amp;quot;},{&amp;quot;x&amp;quot;:9.4107,&amp;quot;y&amp;quot;:390.5269,&amp;quot;group&amp;quot;:&amp;quot;group 1&amp;quot;},{&amp;quot;x&amp;quot;:6.3857,&amp;quot;y&amp;quot;:65.0051,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;},{&amp;quot;x&amp;quot;:1.9049,&amp;quot;y&amp;quot;:-34.3918,&amp;quot;group&amp;quot;:&amp;quot;group 3&amp;quot;},{&amp;quot;x&amp;quot;:0.8884,&amp;quot;y&amp;quot;:21.3158,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;}];
##     &amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Beautiful, we have our data, in &lt;code&gt;json&lt;/code&gt; format, wrapped in a script tag. Now we can send the whole dataframe through. This time I am using the &lt;code&gt;results = &amp;quot;asis&amp;quot;&lt;/code&gt; option in the code chunk (&lt;code&gt;{r, results = &amp;quot;asis&amp;quot;}&lt;/code&gt;), to write the results directly to the html document and not to the output like we did above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Initiate data transfer protocol one
send_df_to_js(random_data)&lt;/code&gt;&lt;/pre&gt;
&lt;script&gt;
      var data = [{&#34;x&#34;:5.1672,&#34;y&#34;:87.3694,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.1433,&#34;y&#34;:-54.6532,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.4107,&#34;y&#34;:390.5269,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.3857,&#34;y&#34;:65.0051,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.9049,&#34;y&#34;:-34.3918,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.8884,&#34;y&#34;:21.3158,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.1408,&#34;y&#34;:190.7953,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.6681,&#34;y&#34;:128.386,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.4288,&#34;y&#34;:111.3281,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.7584,&#34;y&#34;:-21.8225,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.9158,&#34;y&#34;:28.5363,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.513,&#34;y&#34;:106.356,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.8642,&#34;y&#34;:205.8904,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.4683,&#34;y&#34;:153.44,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.3135,&#34;y&#34;:-88.2044,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.4712,&#34;y&#34;:-13.0811,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.4807,&#34;y&#34;:71.1016,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.1628,&#34;y&#34;:-35.4066,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.1961,&#34;y&#34;:-3.4944,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.8061,&#34;y&#34;:-29.0198,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.3508,&#34;y&#34;:66.73,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.1358,&#34;y&#34;:-53.4036,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.7637,&#34;y&#34;:-86.2603,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.4136,&#34;y&#34;:-0.6769,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.5843,&#34;y&#34;:108.0432,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.5248,&#34;y&#34;:57.4236,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.4776,&#34;y&#34;:35.8479,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.5275,&#34;y&#34;:158.534,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.8261,&#34;y&#34;:250.5278,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.2697,&#34;y&#34;:219.0864,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.2802,&#34;y&#34;:127.6001,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.3995,&#34;y&#34;:186.5165,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.1601,&#34;y&#34;:114.339,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.2222,&#34;y&#34;:5.6429,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.7533,&#34;y&#34;:91.4349,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.7964,&#34;y&#34;:57.4388,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.9739,&#34;y&#34;:34.3526,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.6419,&#34;y&#34;:13.4629,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.5343,&#34;y&#34;:27.4774,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.1608,&#34;y&#34;:72.7192,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.1323,&#34;y&#34;:65.9479,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.8158,&#34;y&#34;:339.8411,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.4973,&#34;y&#34;:189.8986,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.4844,&#34;y&#34;:-98.9686,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.707,&#34;y&#34;:329.6008,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.9735,&#34;y&#34;:-4.4628,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.31,&#34;y&#34;:54.7026,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.8348,&#34;y&#34;:45.624,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.7075,&#34;y&#34;:26.609,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.6424,&#34;y&#34;:63.1251,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.9013,&#34;y&#34;:153.3541,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.4534,&#34;y&#34;:110.8243,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.6082,&#34;y&#34;:-0.8208,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.6086,&#34;y&#34;:15.5805,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.5509,&#34;y&#34;:101.2566,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.0713,&#34;y&#34;:-2.5711,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.0858,&#34;y&#34;:-45.6463,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.4745,&#34;y&#34;:46.0676,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.9476,&#34;y&#34;:-100.6145,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.8461,&#34;y&#34;:-4.9632,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.143,&#34;y&#34;:6.745,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.2718,&#34;y&#34;:57.384,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.5646,&#34;y&#34;:-28.8613,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.0571,&#34;y&#34;:173.0176,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.023,&#34;y&#34;:-20.1804,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.7695,&#34;y&#34;:-94.7828,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.0568,&#34;y&#34;:183.2973,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.8476,&#34;y&#34;:295.1752,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.5376,&#34;y&#34;:69.7837,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.137,&#34;y&#34;:-12.8829,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.8567,&#34;y&#34;:165.1087,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.6917,&#34;y&#34;:-44.7029,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.7163,&#34;y&#34;:169.4461,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.42,&#34;y&#34;:198.888,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.6835,&#34;y&#34;:119.3173,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.6085,&#34;y&#34;:71.3551,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.3225,&#34;y&#34;:-5.3145,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.3069,&#34;y&#34;:237.6172,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.0169,&#34;y&#34;:-91.8767,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.1651,&#34;y&#34;:83.8203,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.9309,&#34;y&#34;:69.6114,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.5135,&#34;y&#34;:-68.6472,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.5028,&#34;y&#34;:-59.0269,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.7199,&#34;y&#34;:222.2651,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.5128,&#34;y&#34;:3.1027,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.4668,&#34;y&#34;:22.0952,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.6924,&#34;y&#34;:8.6445,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.7656,&#34;y&#34;:43.7474,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.5976,&#34;y&#34;:-19.5412,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.2987,&#34;y&#34;:49.5418,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.2994,&#34;y&#34;:47.9307,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.7082,&#34;y&#34;:-15.9949,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.7753,&#34;y&#34;:-144.4675,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.3255,&#34;y&#34;:9.1525,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.199,&#34;y&#34;:-29.1179,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.4427,&#34;y&#34;:-62.3833,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.166,&#34;y&#34;:-116.6663,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.8257,&#34;y&#34;:197.8047,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.662,&#34;y&#34;:218.8495,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.7377,&#34;y&#34;:132.0543,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.5125,&#34;y&#34;:74.5435,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.7116,&#34;y&#34;:124.4967,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.9395,&#34;y&#34;:-103.3903,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.969,&#34;y&#34;:213.4235,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.3814,&#34;y&#34;:68.0202,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.7839,&#34;y&#34;:-28.881,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.5087,&#34;y&#34;:110.4228,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.3953,&#34;y&#34;:184.0145,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.2054,&#34;y&#34;:-35.8775,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.2345,&#34;y&#34;:-39.3533,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.2304,&#34;y&#34;:-24.2599,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.1083,&#34;y&#34;:194.8125,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.6616,&#34;y&#34;:33.1625,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.3726,&#34;y&#34;:48.9583,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.4232,&#34;y&#34;:70.2064,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.9711,&#34;y&#34;:-4.7464,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.7528,&#34;y&#34;:16.7232,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.561,&#34;y&#34;:211.4595,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.6242,&#34;y&#34;:139.2021,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.5345,&#34;y&#34;:175.695,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.1814,&#34;y&#34;:285.1357,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.7514,&#34;y&#34;:97.007,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.6301,&#34;y&#34;:-14.1692,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.8942,&#34;y&#34;:-98.9339,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.6891,&#34;y&#34;:-22.1053,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.7433,&#34;y&#34;:117.4197,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.2308,&#34;y&#34;:167.3886,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.9423,&#34;y&#34;:68.529,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.4738,&#34;y&#34;:-138.0555,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.3048,&#34;y&#34;:172.5911,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.3349,&#34;y&#34;:-127.1037,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.0227,&#34;y&#34;:145.6236,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.1718,&#34;y&#34;:143.8452,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.3368,&#34;y&#34;:68.3559,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.5305,&#34;y&#34;:211.651,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.3745,&#34;y&#34;:-52.0447,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.7915,&#34;y&#34;:-8.5966,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.561,&#34;y&#34;:-10.1097,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.2406,&#34;y&#34;:109.1841,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.9387,&#34;y&#34;:64.0804,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.0681,&#34;y&#34;:92.7044,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.8326,&#34;y&#34;:195.1132,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.9638,&#34;y&#34;:252.7303,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.9898,&#34;y&#34;:440.9477,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.8676,&#34;y&#34;:-107.579,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.5081,&#34;y&#34;:-90.9037,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.7755,&#34;y&#34;:-27.7603,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.8463,&#34;y&#34;:33.1022,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.2493,&#34;y&#34;:40.129,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.911,&#34;y&#34;:-119.6904,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.0022,&#34;y&#34;:20.2151,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.2717,&#34;y&#34;:-6.529,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.7604,&#34;y&#34;:135.5169,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.0541,&#34;y&#34;:117.9617,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.158,&#34;y&#34;:-54.2407,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.9032,&#34;y&#34;:-84.5539,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.5922,&#34;y&#34;:257.7502,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.3438,&#34;y&#34;:-53.6737,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.6052,&#34;y&#34;:322.7167,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.4077,&#34;y&#34;:290.7942,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.4842,&#34;y&#34;:169.2014,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.5627,&#34;y&#34;:8.3719,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.8813,&#34;y&#34;:60.0146,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.1603,&#34;y&#34;:-106.5004,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.6887,&#34;y&#34;:352.1908,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.4225,&#34;y&#34;:11.7248,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.1353,&#34;y&#34;:85.8228,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.4114,&#34;y&#34;:-23.679,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.5736,&#34;y&#34;:59.8097,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.2988,&#34;y&#34;:184.786,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.4262,&#34;y&#34;:169.0127,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.3619,&#34;y&#34;:-8.4095,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.4099,&#34;y&#34;:-34.0839,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.3785,&#34;y&#34;:-17.4975,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.4563,&#34;y&#34;:27.8809,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.9838,&#34;y&#34;:257.1836,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.6714,&#34;y&#34;:-34.3227,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.0358,&#34;y&#34;:1.0028,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.5683,&#34;y&#34;:276.354,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.6058,&#34;y&#34;:8.5668,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.7939,&#34;y&#34;:199.2433,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.1603,&#34;y&#34;:36.6154,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.5782,&#34;y&#34;:53.1056,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.4075,&#34;y&#34;:248.2751,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.4938,&#34;y&#34;:-1.2228,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.6307,&#34;y&#34;:20.9225,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.927,&#34;y&#34;:-39.449,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.6729,&#34;y&#34;:-34.5635,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.8394,&#34;y&#34;:123.8564,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.4069,&#34;y&#34;:23.5731,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.2631,&#34;y&#34;:298.1299,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.0054,&#34;y&#34;:250.0955,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.9223,&#34;y&#34;:16.284,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.0692,&#34;y&#34;:-182.3728,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.3085,&#34;y&#34;:-137.8332,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.6779,&#34;y&#34;:381.8748,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.0984,&#34;y&#34;:-49.9626,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.2319,&#34;y&#34;:275.7885,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.1249,&#34;y&#34;:-91.0568,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.6287,&#34;y&#34;:341.2595,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.6392,&#34;y&#34;:17.5049,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.2007,&#34;y&#34;:80.0976,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.0389,&#34;y&#34;:4.8548,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.6161,&#34;y&#34;:179.8117,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.5825,&#34;y&#34;:146.6041,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.761,&#34;y&#34;:311.5813,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.4668,&#34;y&#34;:118.4418,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.3316,&#34;y&#34;:120.8767,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.2456,&#34;y&#34;:163.2828,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.5561,&#34;y&#34;:-121.4371,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.5842,&#34;y&#34;:261.461,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.5787,&#34;y&#34;:-76.7672,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.454,&#34;y&#34;:21.2401,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.8793,&#34;y&#34;:30.2634,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.242,&#34;y&#34;:123.5833,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.8417,&#34;y&#34;:123.7691,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.5541,&#34;y&#34;:-28.5422,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.3347,&#34;y&#34;:33.337,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.9449,&#34;y&#34;:350.6988,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.1549,&#34;y&#34;:-74.7261,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.6861,&#34;y&#34;:2.9076,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.1639,&#34;y&#34;:-21.4907,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.1331,&#34;y&#34;:-113.242,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.2141,&#34;y&#34;:-1.5934,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.4371,&#34;y&#34;:57.1336,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.2783,&#34;y&#34;:-35.3093,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.9767,&#34;y&#34;:164.2248,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.9287,&#34;y&#34;:360.3652,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.1618,&#34;y&#34;:-46.0718,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.908,&#34;y&#34;:210.0328,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.7554,&#34;y&#34;:444.9757,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.2108,&#34;y&#34;:165.4196,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.8009,&#34;y&#34;:-17.2803,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.3936,&#34;y&#34;:-101.5863,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.7135,&#34;y&#34;:103.5218,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.4408,&#34;y&#34;:-96.4059,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.6903,&#34;y&#34;:-12.0102,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.6856,&#34;y&#34;:108.1939,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.5093,&#34;y&#34;:99.7041,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.8441,&#34;y&#34;:178.1646,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.4087,&#34;y&#34;:379.7914,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.3348,&#34;y&#34;:125.572,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.1579,&#34;y&#34;:21.2044,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.3621,&#34;y&#34;:274.3614,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.2146,&#34;y&#34;:-18.2792,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.4438,&#34;y&#34;:-57.0349,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.1161,&#34;y&#34;:-36.2982,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.893,&#34;y&#34;:-98.1465,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.338,&#34;y&#34;:36.2524,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.0867,&#34;y&#34;:324.822,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.6264,&#34;y&#34;:-94.6715,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.0625,&#34;y&#34;:237.4776,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.4215,&#34;y&#34;:72.8027,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.1643,&#34;y&#34;:167.8006,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.6285,&#34;y&#34;:506.6523,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.4679,&#34;y&#34;:368.1956,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.303,&#34;y&#34;:324.578,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.9613,&#34;y&#34;:61.9534,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.9667,&#34;y&#34;:-3.1883,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.8524,&#34;y&#34;:271.0552,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.4191,&#34;y&#34;:201.345,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.9377,&#34;y&#34;:57.746,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.1861,&#34;y&#34;:144.8078,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.1958,&#34;y&#34;:241.524,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.997,&#34;y&#34;:122.9867,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.56,&#34;y&#34;:-112.7013,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.1065,&#34;y&#34;:223.6437,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.5946,&#34;y&#34;:138.5711,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.7563,&#34;y&#34;:148.0071,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.1735,&#34;y&#34;:83.4807,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.5068,&#34;y&#34;:205.1817,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.2026,&#34;y&#34;:-49.6565,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.5075,&#34;y&#34;:-90.632,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.7047,&#34;y&#34;:-42.3602,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.3841,&#34;y&#34;:-72.2532,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.8344,&#34;y&#34;:-49.4622,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.4292,&#34;y&#34;:-68.1165,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.5755,&#34;y&#34;:225.9582,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.0034,&#34;y&#34;:117.3608,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.5213,&#34;y&#34;:50.1202,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.6766,&#34;y&#34;:95.3862,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.3776,&#34;y&#34;:-17.5852,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.1109,&#34;y&#34;:311.6224,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.6858,&#34;y&#34;:141.2035,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.519,&#34;y&#34;:33.2841,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.7498,&#34;y&#34;:-60.5846,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.4258,&#34;y&#34;:-34.1601,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.2071,&#34;y&#34;:-2.1896,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.3324,&#34;y&#34;:67.7805,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.5787,&#34;y&#34;:144.6083,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.1427,&#34;y&#34;:-12.9322,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.7064,&#34;y&#34;:-6.1695,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.832,&#34;y&#34;:-12.9007,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.2432,&#34;y&#34;:105.0359,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.7516,&#34;y&#34;:18.8211,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.3446,&#34;y&#34;:67.5051,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.4109,&#34;y&#34;:265.7098,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.2063,&#34;y&#34;:14.5685,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.2685,&#34;y&#34;:195.9815,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.8847,&#34;y&#34;:250.6022,&#34;group&#34;:&#34;group 1&#34;}];
    &lt;/script&gt;
&lt;p&gt;Now our data is inside our page’s javascript scope and ready to be played with!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;drawing-pretty-pictures&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Drawing pretty pictures&lt;/h2&gt;
&lt;p&gt;Let’s make a super simple d3 scatter plot to see this randomly generated data. All I have to do is include my desired javascript libraries, make a &lt;code&gt;div&lt;/code&gt; element for my visualization to go into and then put my &lt;code&gt;{js}&lt;/code&gt; block in. RMarkdown will slot the javascript into the page and we’re good to go.&lt;/p&gt;
&lt;p&gt;In this example I did…&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-3.1.1.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;https://d3js.org/d3.v4.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;div id = &amp;quot;viz&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; 

` ` `{js}
//code goes here
` ` `&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;did-it-work&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Did it work?&lt;/h2&gt;
&lt;script src=&#34;https://code.jquery.com/jquery-3.1.1.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://d3js.org/d3.v4.min.js&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;viz&#34;&gt;

&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
var point_vals = d3.select(&#34;#viz&#34;)
  .append(&#34;p&#34;)
  .attr(&#34;align&#34;, &#34;center&#34;)
  .text(&#34;Mouseover some data!&#34;);

//Get how wide our page is in pixels so we can draw our plot in it
var page_width = $(&#34;#did-it-work&#34;).width();
  
// set the dimensions and margins of the graph
var margin = 20,
    width = page_width - 2*margin,
    height = page_width*0.8 - 2*margin;
    
// Find max data values
var x_extent = d3.extent(data, d =&gt; d.x);
var y_extent = d3.extent(data, d =&gt; d.y);

// Set the scales 
var x = d3.scaleLinear()
  .domain(x_extent)
  .range([0, width]);
  
var y = d3.scaleLinear()
  .domain(y_extent)
  .range([height, 0]);

//Set up our SVG element
var svg = d3.select(&#34;#viz&#34;).append(&#34;svg&#34;)
    .attr(&#34;width&#34;, width + 2*margin)
    .attr(&#34;height&#34;, height + 2*margin)
  .append(&#34;g&#34;)
    .attr(&#34;transform&#34;,
          &#34;translate(&#34; + margin + &#34;,&#34; + margin + &#34;)&#34;);

var bounce_select = d3.transition()
    .duration(1000)
    .ease(d3.easeElastic.period(0.4));
    
// Add the scatterplot
svg.selectAll(&#34;.dots&#34;)
    .data(data)
  .enter().append(&#34;circle&#34;)
    .attr(&#34;class&#34;, &#34;dots&#34;)
    .attr(&#34;fill&#34;, d =&gt; d.group === &#34;group 1&#34;? &#34;steelblue&#34;:&#34;orangered&#34;)
    .attr(&#34;fill-opacity&#34;, 0.3)
    .attr(&#34;r&#34;, 5)
    .attr(&#34;cx&#34;, d =&gt; x(d.x) )
    .attr(&#34;cy&#34;, d =&gt; y(d.y) )
    .on(&#34;mouseover&#34;, function(d){
       d3.selectAll(&#34;.dots&#34;).attr(&#34;r&#34;, 5) //make sure all the dots are small
       d3.select(this)
        .transition(bounce_select)
        .attr(&#34;r&#34;, 10);
      
       point_vals.text(&#34;X:&#34; + d.x + &#34; Y:&#34; + d.y) //change the title of the graph to the datapoint
    });
    
// Draw the axes    
// Add the X Axis
svg.append(&#34;g&#34;)
    .attr(&#34;transform&#34;, &#34;translate(0,&#34; + height + &#34;)&#34;)
    .call(d3.axisBottom(x));

// Add the Y Axis
svg.append(&#34;g&#34;)
    .call(d3.axisLeft(y));
&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;why-when&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why/ When&lt;/h2&gt;
&lt;p&gt;This is a bad example of a visualization for this scenario as something like plotly could do this in much less effort. If you’re doing something more complicated/ bespoke then this is a great resource to have.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;addendum&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Addendum&lt;/h2&gt;
&lt;p&gt;If you’re interested, here’s the javascript code I included to make the above graph.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var point_vals = d3.select(&amp;quot;#viz&amp;quot;).append(&amp;quot;p&amp;quot;).text(&amp;quot;Mouseover some data!&amp;quot;);

//Get how wide our page is in pixels so we can draw our plot in it
var page_width = $(&amp;quot;#did-it-work&amp;quot;).width();
  
// set the dimensions and margins of the graph
var margin = 20,
    width = page_width - 2*margin,
    height = page_width*0.8 - 2*margin;
    
// Find max data values
var x_extent = d3.extent(data, d =&amp;gt; d.x);
var y_extent = d3.extent(data, d =&amp;gt; d.y);

// Set the scales 
var x = d3.scaleLinear()
  .domain(x_extent)
  .range([0, width]);
  
var y = d3.scaleLinear()
  .domain(y_extent)
  .range([height, 0]);

//Set up our SVG element
var svg = d3.select(&amp;quot;#viz&amp;quot;).append(&amp;quot;svg&amp;quot;)
    .attr(&amp;quot;width&amp;quot;, width + 2*margin)
    .attr(&amp;quot;height&amp;quot;, height + 2*margin)
  .append(&amp;quot;g&amp;quot;)
    .attr(&amp;quot;transform&amp;quot;,
          &amp;quot;translate(&amp;quot; + margin + &amp;quot;,&amp;quot; + margin + &amp;quot;)&amp;quot;);

var bounce_select = d3.transition()
    .duration(1000)
    .ease(d3.easeElastic.period(0.4));
    
// Add the scatterplot
svg.selectAll(&amp;quot;.dots&amp;quot;)
    .data(data)
  .enter().append(&amp;quot;circle&amp;quot;)
    .attr(&amp;quot;class&amp;quot;, &amp;quot;dots&amp;quot;)
    .attr(&amp;quot;fill&amp;quot;, d =&amp;gt; d.group === &amp;quot;group 1&amp;quot;? &amp;quot;steelblue&amp;quot;:&amp;quot;orangered&amp;quot;)
    .attr(&amp;quot;fill-opacity&amp;quot;, 0.3)
    .attr(&amp;quot;r&amp;quot;, 5)
    .attr(&amp;quot;cx&amp;quot;, d =&amp;gt; x(d.x) )
    .attr(&amp;quot;cy&amp;quot;, d =&amp;gt; y(d.y) )
    .on(&amp;quot;mouseover&amp;quot;, function(d){
       d3.selectAll(&amp;quot;.dots&amp;quot;).attr(&amp;quot;r&amp;quot;, 5) //make sure all the dots are small
       d3.select(this)
        .transition(bounce_select)
        .attr(&amp;quot;r&amp;quot;, 10);
      
       point_vals.text(&amp;quot;X:&amp;quot; + d.x + &amp;quot; Y:&amp;quot; + d.y) //change the title of the graph to the datapoint
    });
    
// Draw the axes    
// Add the X Axis
svg.append(&amp;quot;g&amp;quot;)
    .attr(&amp;quot;transform&amp;quot;, &amp;quot;translate(0,&amp;quot; + height + &amp;quot;)&amp;quot;)
    .call(d3.axisBottom(x));

// Add the Y Axis
svg.append(&amp;quot;g&amp;quot;)
    .call(d3.axisLeft(y));&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
  </channel>
</rss>
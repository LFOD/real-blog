<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Live Free or Dichotomize</title>
    <link>/tags/visualization/index.xml</link>
    <description>Recent content on Live Free or Dichotomize</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/tags/visualization/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Custom JavaScript visualizations in RMarkdown</title>
      <link>/2017/01/24/custom-javascript-visualizations-in-rmarkdown/</link>
      <pubDate>Tue, 24 Jan 2017 10:54:24 +0200</pubDate>
      
      <guid>/2017/01/24/custom-javascript-visualizations-in-rmarkdown/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I happened to stumble upon the &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/preview/&#34;&gt;preview release page&lt;/a&gt; for RStudio recently and noticed something that made me exorbitantly happy.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A preview release of RStudio v1.0.136 is now available for testing and feedback. This release includes… Support for JavaScript and CSS chunks in R Notebooks…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;“Support for JavaScript and CSS chunks in R Notebooks”&lt;/em&gt;! As someone who loves using javascript for plotting (and secretly for manipulating) data this is massively exciting. Previously my workflow for generating an interactive graphic would be something like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download data&lt;/li&gt;
&lt;li&gt;Clean data and do preliminary visualization in R&lt;/li&gt;
&lt;li&gt;Export what I liked to a csv file and make a new directory with a set of &lt;code&gt;.html, .js, .css&lt;/code&gt; files in it.&lt;/li&gt;
&lt;li&gt;Load data into javascript/d3.js in the new javascript file.&lt;/li&gt;
&lt;li&gt;Plot.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This workflow has served me very well, I did it probably 20 times a day when working at the New York Times and I am very fast with it. If you want to just make a stand alone visualization it’s fantastic, however, as a biostatistician who works with a lot of other biostatisticians, people tend to want to see where the data comes from.&lt;/p&gt;
&lt;p&gt;With Javascript chunks in &lt;code&gt;.Rmd&lt;/code&gt; files you can explicitly show the code for data gathering/cleaning etc. in a language that your collaborators can understand, along with making custom d3 charts with that data. All without ever leaving RStudio. I will show you my quick and dirty solution to doing so.&lt;/p&gt;
&lt;div id=&#34;getting-data-into-javascript&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting data into Javascript&lt;/h2&gt;
&lt;p&gt;Instead of generating a csv file in R and then loading that into javascript we will instead send the data directly through the html to javascript. (&lt;em&gt;Note:&lt;/em&gt; This wont work well with super large data).&lt;/p&gt;
&lt;p&gt;Inspired by &lt;a href=&#34;https://medium.com/@becausealice2/getting-r-and-d3-js-to-play-nicely-in-r-markdown-270e302a52d3#.772g93eb3&#34;&gt;this&lt;/a&gt; medium post I wrote a little function that takes a dataframe and sends it to the html document in the &lt;code&gt;.json&lt;/code&gt; format.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(jsonlite)

send_df_to_js &amp;lt;- function(df){
  cat(
    paste(
    &amp;#39;&amp;lt;script&amp;gt;
      var data = &amp;#39;,toJSON(df),&amp;#39;;
    &amp;lt;/script&amp;gt;&amp;#39;
    , sep=&amp;quot;&amp;quot;)
  )
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To illustrate how it works we will generate some random data into a dataframe.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Generate some random x and y data to plot
n &amp;lt;- 300
random_data &amp;lt;- data_frame(x = runif(n)*10) %&amp;gt;% 
  mutate(y = 0.5*x^3 - 1.3*x^2 + rnorm(n, mean = 0, sd = 80),
         group = paste(&amp;quot;group&amp;quot;, sample(c(1,2,3), n, replace = T)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we send a snippit of the dataframe into the function to see the output…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;random_data %&amp;gt;% 
  head() %&amp;gt;% 
  send_df_to_js()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;script&amp;gt;
##       var data = [{&amp;quot;x&amp;quot;:4.0804,&amp;quot;y&amp;quot;:15.6892,&amp;quot;group&amp;quot;:&amp;quot;group 1&amp;quot;},{&amp;quot;x&amp;quot;:9.3618,&amp;quot;y&amp;quot;:308.4212,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;},{&amp;quot;x&amp;quot;:8.5421,&amp;quot;y&amp;quot;:272.6251,&amp;quot;group&amp;quot;:&amp;quot;group 1&amp;quot;},{&amp;quot;x&amp;quot;:1.0672,&amp;quot;y&amp;quot;:-100.2135,&amp;quot;group&amp;quot;:&amp;quot;group 3&amp;quot;},{&amp;quot;x&amp;quot;:9.999,&amp;quot;y&amp;quot;:378.6786,&amp;quot;group&amp;quot;:&amp;quot;group 1&amp;quot;},{&amp;quot;x&amp;quot;:6.5766,&amp;quot;y&amp;quot;:54.2057,&amp;quot;group&amp;quot;:&amp;quot;group 3&amp;quot;}];
##     &amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Beautiful, we have our data, in &lt;code&gt;json&lt;/code&gt; format, wrapped in a script tag. Now we can send the whole dataframe through. This time I am using the &lt;code&gt;results = &amp;quot;asis&amp;quot;&lt;/code&gt; option in the code chunk (&lt;code&gt;{r, results = &amp;quot;asis&amp;quot;}&lt;/code&gt;), to write the results directly to the html document and not to the output like we did above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Initiate data transfer protocol one
send_df_to_js(random_data)&lt;/code&gt;&lt;/pre&gt;
&lt;script&gt;
      var data = [{&#34;x&#34;:4.0804,&#34;y&#34;:15.6892,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.3618,&#34;y&#34;:308.4212,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.5421,&#34;y&#34;:272.6251,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.0672,&#34;y&#34;:-100.2135,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.999,&#34;y&#34;:378.6786,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.5766,&#34;y&#34;:54.2057,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.7037,&#34;y&#34;:212.0067,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.3,&#34;y&#34;:111.8917,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.5121,&#34;y&#34;:-22.4925,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.3954,&#34;y&#34;:29.7616,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.5737,&#34;y&#34;:52.5659,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.279,&#34;y&#34;:187.0672,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.2981,&#34;y&#34;:-113.3463,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.1959,&#34;y&#34;:64.669,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.5977,&#34;y&#34;:30.0415,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.9044,&#34;y&#34;:-30.339,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.5621,&#34;y&#34;:56.1832,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.4553,&#34;y&#34;:282.5716,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.3865,&#34;y&#34;:-151.2519,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.0558,&#34;y&#34;:-23.1655,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.1594,&#34;y&#34;:98.2888,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.43,&#34;y&#34;:-25.7297,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.876,&#34;y&#34;:250.9431,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.2923,&#34;y&#34;:35.9877,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.6998,&#34;y&#34;:90.2723,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.7997,&#34;y&#34;:-21.0396,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.7283,&#34;y&#34;:70.324,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.2807,&#34;y&#34;:31.5122,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.9885,&#34;y&#34;:-9.6005,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.281,&#34;y&#34;:15.8435,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.1082,&#34;y&#34;:-4.1507,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.3761,&#34;y&#34;:158.3336,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.443,&#34;y&#34;:-132.6158,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.1468,&#34;y&#34;:61.2987,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.2501,&#34;y&#34;:84.8603,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.1365,&#34;y&#34;:-18.4451,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.6103,&#34;y&#34;:2.8207,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.6965,&#34;y&#34;:98.9759,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.8368,&#34;y&#34;:46.9183,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.835,&#34;y&#34;:-29.337,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.8883,&#34;y&#34;:108.5664,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.4212,&#34;y&#34;:10.7555,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.274,&#34;y&#34;:-73.5146,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.0438,&#34;y&#34;:-20.5293,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.6893,&#34;y&#34;:13.5731,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.2231,&#34;y&#34;:40.7089,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.7346,&#34;y&#34;:69.6988,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.6664,&#34;y&#34;:167.8813,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.8472,&#34;y&#34;:56.6236,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.6454,&#34;y&#34;:181.2056,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.3348,&#34;y&#34;:74.4805,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.8229,&#34;y&#34;:100.4891,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.7347,&#34;y&#34;:26.6651,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.0621,&#34;y&#34;:135.3171,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.1147,&#34;y&#34;:0.8685,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.9813,&#34;y&#34;:-27.33,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.8896,&#34;y&#34;:53.2539,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.3356,&#34;y&#34;:-9.961,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.377,&#34;y&#34;:12.1224,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.6255,&#34;y&#34;:5.2405,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.9111,&#34;y&#34;:-18.3201,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.3412,&#34;y&#34;:283.9498,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.4312,&#34;y&#34;:284.7218,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.2281,&#34;y&#34;:36.9924,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.7929,&#34;y&#34;:6.5551,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.5167,&#34;y&#34;:-62.8657,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.9613,&#34;y&#34;:82.1154,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.3161,&#34;y&#34;:-12.3608,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.9995,&#34;y&#34;:304.3194,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.5993,&#34;y&#34;:-78.224,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.9102,&#34;y&#34;:-2.8099,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.2462,&#34;y&#34;:-20.258,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.9325,&#34;y&#34;:330.4557,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.7136,&#34;y&#34;:33.5017,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.161,&#34;y&#34;:216.7713,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.6571,&#34;y&#34;:-46.4253,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.8026,&#34;y&#34;:89.0758,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.2283,&#34;y&#34;:20.1433,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.9469,&#34;y&#34;:-37.7306,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.969,&#34;y&#34;:-27.1934,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.0588,&#34;y&#34;:74.1591,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.2123,&#34;y&#34;:221.0162,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.7055,&#34;y&#34;:-64.6937,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.1442,&#34;y&#34;:53.4307,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.8638,&#34;y&#34;:101.5452,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.0006,&#34;y&#34;:6.5604,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.0931,&#34;y&#34;:134.7388,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.2919,&#34;y&#34;:104.7796,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.9258,&#34;y&#34;:47.776,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.1874,&#34;y&#34;:97.4999,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.7879,&#34;y&#34;:36.5323,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.786,&#34;y&#34;:293.7139,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.1491,&#34;y&#34;:215.0538,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.9382,&#34;y&#34;:107.8434,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.4374,&#34;y&#34;:118.0256,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.8783,&#34;y&#34;:402.297,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.1956,&#34;y&#34;:-8.134,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.5055,&#34;y&#34;:122.3176,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.0146,&#34;y&#34;:-105.7884,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.6082,&#34;y&#34;:-13.4472,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.2403,&#34;y&#34;:101.5125,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.9969,&#34;y&#34;:71.9083,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.1513,&#34;y&#34;:-139.4103,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.1086,&#34;y&#34;:391.5673,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.9407,&#34;y&#34;:8.8933,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.3673,&#34;y&#34;:87.1346,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.9621,&#34;y&#34;:-42.1147,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.0138,&#34;y&#34;:312.3831,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.6885,&#34;y&#34;:5.1523,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.1399,&#34;y&#34;:218.313,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.6981,&#34;y&#34;:27.6139,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.8158,&#34;y&#34;:65.3199,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.7618,&#34;y&#34;:-156.0473,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.8816,&#34;y&#34;:-14.4811,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.3102,&#34;y&#34;:21.6866,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.6649,&#34;y&#34;:115.8285,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.5157,&#34;y&#34;:329.3457,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.39,&#34;y&#34;:359.2483,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.5529,&#34;y&#34;:9.6719,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.316,&#34;y&#34;:-43.9455,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.4666,&#34;y&#34;:78.0863,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.544,&#34;y&#34;:-120.9728,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.3773,&#34;y&#34;:295.3248,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.5082,&#34;y&#34;:77.7259,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.5689,&#34;y&#34;:108.9013,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.8989,&#34;y&#34;:301.8726,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.199,&#34;y&#34;:30.3649,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.2412,&#34;y&#34;:55.077,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.7597,&#34;y&#34;:49.7693,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.666,&#34;y&#34;:207.0773,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.7453,&#34;y&#34;:102.7853,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.3335,&#34;y&#34;:-63.9473,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.3731,&#34;y&#34;:109.4226,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.4655,&#34;y&#34;:49.0952,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.7824,&#34;y&#34;:109.6812,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.2848,&#34;y&#34;:-28.8546,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.5719,&#34;y&#34;:314.9185,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.3628,&#34;y&#34;:146.1817,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.2897,&#34;y&#34;:-22.6806,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.8823,&#34;y&#34;:-177.0891,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.2634,&#34;y&#34;:77.3403,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.1274,&#34;y&#34;:229.4655,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.1067,&#34;y&#34;:85.1153,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.8062,&#34;y&#34;:239.4255,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.7224,&#34;y&#34;:111.8017,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.2587,&#34;y&#34;:-10.1332,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.5745,&#34;y&#34;:299.0451,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.1796,&#34;y&#34;:-21.2583,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.8829,&#34;y&#34;:120.8836,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.4239,&#34;y&#34;:-150.6713,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.3968,&#34;y&#34;:-64.9971,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.1361,&#34;y&#34;:22.3011,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.3542,&#34;y&#34;:-0.6902,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.0092,&#34;y&#34;:225.7205,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.7203,&#34;y&#34;:357.0912,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.1421,&#34;y&#34;:-13.848,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.395,&#34;y&#34;:14.36,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.4655,&#34;y&#34;:29.2154,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.9633,&#34;y&#34;:32.4499,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.6362,&#34;y&#34;:13.5102,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.5576,&#34;y&#34;:-82.8547,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.4862,&#34;y&#34;:11.317,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.8071,&#34;y&#34;:-163.7411,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.2453,&#34;y&#34;:98.7684,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.6119,&#34;y&#34;:491.0913,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.4136,&#34;y&#34;:45.3229,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.7729,&#34;y&#34;:30.4844,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.3072,&#34;y&#34;:369.1282,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.7404,&#34;y&#34;:-53.2339,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.5513,&#34;y&#34;:63.3736,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.0831,&#34;y&#34;:-9.5128,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.8322,&#34;y&#34;:59.3985,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.4551,&#34;y&#34;:393.4252,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.1427,&#34;y&#34;:152.6729,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.2235,&#34;y&#34;:373.8384,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.7482,&#34;y&#34;:221.6612,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.4303,&#34;y&#34;:81.9321,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.7131,&#34;y&#34;:133.4837,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.6115,&#34;y&#34;:35.6528,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.546,&#34;y&#34;:100.5444,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.0225,&#34;y&#34;:-96.7322,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.7282,&#34;y&#34;:67.0794,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.6078,&#34;y&#34;:207.5242,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.2909,&#34;y&#34;:-48.0518,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.0452,&#34;y&#34;:78.2533,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.2682,&#34;y&#34;:152.1535,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.7132,&#34;y&#34;:84.8005,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.9461,&#34;y&#34;:355.4276,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.5373,&#34;y&#34;:22.6076,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.6532,&#34;y&#34;:196.2051,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.668,&#34;y&#34;:85.2852,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.7372,&#34;y&#34;:86.2429,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.1295,&#34;y&#34;:403.1169,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.5518,&#34;y&#34;:-28.6702,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.0742,&#34;y&#34;:17.585,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.0996,&#34;y&#34;:64.6196,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.2378,&#34;y&#34;:-33.0154,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.5,&#34;y&#34;:-23.1787,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.3419,&#34;y&#34;:-0.7544,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.301,&#34;y&#34;:241.5271,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.3695,&#34;y&#34;:77.3351,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.9586,&#34;y&#34;:364.3368,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.129,&#34;y&#34;:-11.0861,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.3389,&#34;y&#34;:-1.9966,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.3436,&#34;y&#34;:-51.5212,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.9281,&#34;y&#34;:45.4773,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.7898,&#34;y&#34;:-57.1679,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.73,&#34;y&#34;:-6.2519,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.6453,&#34;y&#34;:87.9345,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.172,&#34;y&#34;:-23.6301,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.5907,&#34;y&#34;:95.0002,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.2341,&#34;y&#34;:74.6408,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.4552,&#34;y&#34;:204.1606,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.2738,&#34;y&#34;:67.2123,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.9358,&#34;y&#34;:-157.2815,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.6284,&#34;y&#34;:74.2356,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.1117,&#34;y&#34;:103.5719,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.5126,&#34;y&#34;:72.0084,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.4672,&#34;y&#34;:106.8436,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.2392,&#34;y&#34;:262.1202,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.1937,&#34;y&#34;:177.8851,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.2741,&#34;y&#34;:156.0735,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.8357,&#34;y&#34;:87.3845,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.4093,&#34;y&#34;:76.3526,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.5481,&#34;y&#34;:-60.3074,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.2981,&#34;y&#34;:365.2378,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.1437,&#34;y&#34;:74.8104,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.5113,&#34;y&#34;:110.1815,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.912,&#34;y&#34;:-15.2526,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.2674,&#34;y&#34;:196.4986,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.1969,&#34;y&#34;:126.5569,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.7449,&#34;y&#34;:80.8444,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.7552,&#34;y&#34;:11.769,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.4621,&#34;y&#34;:256.3332,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.1882,&#34;y&#34;:108.5786,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.5028,&#34;y&#34;:56.3904,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.1253,&#34;y&#34;:26.0744,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.2516,&#34;y&#34;:66.9391,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.7785,&#34;y&#34;:5.0006,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.1105,&#34;y&#34;:7.4206,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.0302,&#34;y&#34;:5.1003,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.3208,&#34;y&#34;:-146.401,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.0592,&#34;y&#34;:148.6635,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.0469,&#34;y&#34;:11.4781,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.8074,&#34;y&#34;:137.7089,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.36,&#34;y&#34;:338.5066,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.3254,&#34;y&#34;:28.8489,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.5868,&#34;y&#34;:329.6668,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.6577,&#34;y&#34;:76.2213,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.8825,&#34;y&#34;:-221.4776,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.1728,&#34;y&#34;:5.7783,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.9399,&#34;y&#34;:180.1095,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.4221,&#34;y&#34;:-57.4686,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.1025,&#34;y&#34;:88.6903,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.0881,&#34;y&#34;:-86.8537,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.7298,&#34;y&#34;:42.0683,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.284,&#34;y&#34;:26.4544,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.7399,&#34;y&#34;:407.6015,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.0579,&#34;y&#34;:129.1747,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.0874,&#34;y&#34;:93.2034,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.9229,&#34;y&#34;:2.5655,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.0571,&#34;y&#34;:-32.2967,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.3734,&#34;y&#34;:38.2698,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.675,&#34;y&#34;:177.9825,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.5368,&#34;y&#34;:131.1423,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.7346,&#34;y&#34;:-93.7112,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.5365,&#34;y&#34;:72.5709,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.24,&#34;y&#34;:325.1435,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.9293,&#34;y&#34;:279.1832,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.2663,&#34;y&#34;:-54.1879,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.2575,&#34;y&#34;:5.2217,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.7106,&#34;y&#34;:253.6835,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.952,&#34;y&#34;:30.1848,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.0276,&#34;y&#34;:-68.6641,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.6523,&#34;y&#34;:118.2446,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.464,&#34;y&#34;:140.9943,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.0714,&#34;y&#34;:256.6628,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.2567,&#34;y&#34;:215.8155,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.2521,&#34;y&#34;:179.8423,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.0952,&#34;y&#34;:29.7201,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.5155,&#34;y&#34;:91.7519,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.5259,&#34;y&#34;:372.8772,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.5119,&#34;y&#34;:142.6092,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.3833,&#34;y&#34;:22.8934,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.1481,&#34;y&#34;:-21.852,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.8342,&#34;y&#34;:153.0454,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.9696,&#34;y&#34;:111.8957,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.727,&#34;y&#34;:107.0185,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.817,&#34;y&#34;:6.8144,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.681,&#34;y&#34;:-67.212,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.5823,&#34;y&#34;:171.0193,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.0273,&#34;y&#34;:39.4568,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.1117,&#34;y&#34;:119.6551,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.1985,&#34;y&#34;:20.1209,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.9278,&#34;y&#34;:9.6629,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.4693,&#34;y&#34;:82.7055,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.955,&#34;y&#34;:-93.0198,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.4294,&#34;y&#34;:69.7305,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.7416,&#34;y&#34;:178.9256,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.6122,&#34;y&#34;:25.5252,&#34;group&#34;:&#34;group 1&#34;}];
    &lt;/script&gt;
&lt;p&gt;Now our data is inside our page’s javascript scope and ready to be played with!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;drawing-pretty-pictures&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Drawing pretty pictures&lt;/h2&gt;
&lt;p&gt;Let’s make a super simple d3 scatter plot to see this randomly generated data. All I have to do is include my desired javascript libraries, make a &lt;code&gt;div&lt;/code&gt; element for my visualization to go into and then put my &lt;code&gt;{js}&lt;/code&gt; block in. RMarkdown will slot the javascript into the page and we’re good to go.&lt;/p&gt;
&lt;p&gt;In this example I did…&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-3.1.1.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;https://d3js.org/d3.v4.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;div id = &amp;quot;viz&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; 

` ` `{js}
//code goes here
` ` `&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;did-it-work&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Did it work?&lt;/h2&gt;
&lt;script src=&#34;https://code.jquery.com/jquery-3.1.1.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://d3js.org/d3.v4.min.js&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;viz&#34;&gt;

&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
var point_vals = d3.select(&#34;#viz&#34;)
  .append(&#34;p&#34;)
  .attr(&#34;align&#34;, &#34;center&#34;)
  .text(&#34;Mouseover some data!&#34;);

//Get how wide our page is in pixels so we can draw our plot in it
var page_width = $(&#34;#did-it-work&#34;).width();
  
// set the dimensions and margins of the graph
var margin = 30,
    width = page_width - 2*margin,
    height = page_width*0.8 - 2*margin;
    
// Find max data values
var x_extent = d3.extent(data, d =&gt; d.x);
var y_extent = d3.extent(data, d =&gt; d.y);

// Set the scales 
var x = d3.scaleLinear()
  .domain(x_extent)
  .range([0, width]);
  
var y = d3.scaleLinear()
  .domain(y_extent)
  .range([height, 0]);

//Set up our SVG element
var svg = d3.select(&#34;#viz&#34;).append(&#34;svg&#34;)
    .attr(&#34;width&#34;, width + 2*margin)
    .attr(&#34;height&#34;, height + 2*margin)
  .append(&#34;g&#34;)
    .attr(&#34;transform&#34;,
          &#34;translate(&#34; + margin + &#34;,&#34; + margin + &#34;)&#34;);

var bounce_select = d3.transition()
    .duration(1000)
    .ease(d3.easeElastic.period(0.4));
    
// Add the scatterplot
svg.selectAll(&#34;.dots&#34;)
    .data(data)
  .enter().append(&#34;circle&#34;)
    .attr(&#34;class&#34;, &#34;dots&#34;)
    .attr(&#34;fill&#34;, d =&gt; d.group === &#34;group 1&#34;? &#34;steelblue&#34;:&#34;orangered&#34;)
    .attr(&#34;fill-opacity&#34;, 0.3)
    .attr(&#34;r&#34;, 5)
    .attr(&#34;cx&#34;, d =&gt; x(d.x) )
    .attr(&#34;cy&#34;, d =&gt; y(d.y) )
    .on(&#34;mouseover&#34;, function(d){
       d3.selectAll(&#34;.dots&#34;).attr(&#34;r&#34;, 5) //make sure all the dots are small
       d3.select(this)
        .transition(bounce_select)
        .attr(&#34;r&#34;, 10);
      
       point_vals.text(&#34;X:&#34; + d.x + &#34; Y:&#34; + d.y) //change the title of the graph to the datapoint
    });
    
// Draw the axes    
// Add the X Axis
svg.append(&#34;g&#34;)
    .attr(&#34;transform&#34;, &#34;translate(0,&#34; + height + &#34;)&#34;)
    .call(d3.axisBottom(x));

// Add the Y Axis
svg.append(&#34;g&#34;)
    .call(d3.axisLeft(y));
&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;why-when&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why/ When&lt;/h2&gt;
&lt;p&gt;This is a bad example of a visualization for this scenario as something like plotly could do this in much less effort. If you’re doing something more complicated/ bespoke then this is a great resource to have.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;addendum&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Addendum&lt;/h2&gt;
&lt;p&gt;If you’re interested, here’s the javascript code I included to make the above graph.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var point_vals = d3.select(&amp;quot;#viz&amp;quot;).append(&amp;quot;p&amp;quot;).text(&amp;quot;Mouseover some data!&amp;quot;);

//Get how wide our page is in pixels so we can draw our plot in it
var page_width = $(&amp;quot;#did-it-work&amp;quot;).width();
  
// set the dimensions and margins of the graph
var margin = 20,
    width = page_width - 2*margin,
    height = page_width*0.8 - 2*margin;
    
// Find max data values
var x_extent = d3.extent(data, d =&amp;gt; d.x);
var y_extent = d3.extent(data, d =&amp;gt; d.y);

// Set the scales 
var x = d3.scaleLinear()
  .domain(x_extent)
  .range([0, width]);
  
var y = d3.scaleLinear()
  .domain(y_extent)
  .range([height, 0]);

//Set up our SVG element
var svg = d3.select(&amp;quot;#viz&amp;quot;).append(&amp;quot;svg&amp;quot;)
    .attr(&amp;quot;width&amp;quot;, width + 2*margin)
    .attr(&amp;quot;height&amp;quot;, height + 2*margin)
  .append(&amp;quot;g&amp;quot;)
    .attr(&amp;quot;transform&amp;quot;,
          &amp;quot;translate(&amp;quot; + margin + &amp;quot;,&amp;quot; + margin + &amp;quot;)&amp;quot;);

var bounce_select = d3.transition()
    .duration(1000)
    .ease(d3.easeElastic.period(0.4));
    
// Add the scatterplot
svg.selectAll(&amp;quot;.dots&amp;quot;)
    .data(data)
  .enter().append(&amp;quot;circle&amp;quot;)
    .attr(&amp;quot;class&amp;quot;, &amp;quot;dots&amp;quot;)
    .attr(&amp;quot;fill&amp;quot;, d =&amp;gt; d.group === &amp;quot;group 1&amp;quot;? &amp;quot;steelblue&amp;quot;:&amp;quot;orangered&amp;quot;)
    .attr(&amp;quot;fill-opacity&amp;quot;, 0.3)
    .attr(&amp;quot;r&amp;quot;, 5)
    .attr(&amp;quot;cx&amp;quot;, d =&amp;gt; x(d.x) )
    .attr(&amp;quot;cy&amp;quot;, d =&amp;gt; y(d.y) )
    .on(&amp;quot;mouseover&amp;quot;, function(d){
       d3.selectAll(&amp;quot;.dots&amp;quot;).attr(&amp;quot;r&amp;quot;, 5) //make sure all the dots are small
       d3.select(this)
        .transition(bounce_select)
        .attr(&amp;quot;r&amp;quot;, 10);
      
       point_vals.text(&amp;quot;X:&amp;quot; + d.x + &amp;quot; Y:&amp;quot; + d.y) //change the title of the graph to the datapoint
    });
    
// Draw the axes    
// Add the X Axis
svg.append(&amp;quot;g&amp;quot;)
    .attr(&amp;quot;transform&amp;quot;, &amp;quot;translate(0,&amp;quot; + height + &amp;quot;)&amp;quot;)
    .call(d3.axisBottom(x));

// Add the Y Axis
svg.append(&amp;quot;g&amp;quot;)
    .call(d3.axisLeft(y));&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
  </channel>
</rss>
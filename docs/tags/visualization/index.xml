<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visualization on Live Free or Dichotomize</title>
    <link>/tags/visualization/index.xml</link>
    <description>Recent content in Visualization on Live Free or Dichotomize</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/tags/visualization/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Custom JavaScript Visualizations in RMarkdown</title>
      <link>/2017/01/24/custom-javascript-visualizations-in-rmarkdown/</link>
      <pubDate>Tue, 24 Jan 2017 10:54:24 +0200</pubDate>
      
      <guid>/2017/01/24/custom-javascript-visualizations-in-rmarkdown/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I happened to stumble upon the &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/preview/&#34;&gt;preview release page&lt;/a&gt; for RStudio recently and noticed something that made me exorbitantly happy.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A preview release of RStudio v1.0.136 is now available for testing and feedback. This release includes… Support for JavaScript and CSS chunks in R Notebooks…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;“Support for JavaScript and CSS chunks in R Notebooks”&lt;/em&gt;! As someone who loves using javascript for plotting (and secretly for manipulating) data this is massively exciting. Previously my workflow for generating an interactive graphic would be something like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download data&lt;/li&gt;
&lt;li&gt;Clean data and do preliminary visualization in R&lt;/li&gt;
&lt;li&gt;Export what I liked to a csv file and make a new directory with a set of &lt;code&gt;.html, .js, .css&lt;/code&gt; files in it.&lt;/li&gt;
&lt;li&gt;Load data into javascript/d3.js in the new javascript file.&lt;/li&gt;
&lt;li&gt;Plot.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This workflow has served me very well, I did it probably 20 times a day when working at the New York Times and I am very fast with it. If you want to just make a stand alone visualization it’s fantastic, however, as a biostatistician who works with a lot of other biostatisticians, people tend to want to see where the data comes from.&lt;/p&gt;
&lt;p&gt;With Javascript chunks in &lt;code&gt;.Rmd&lt;/code&gt; files you can explicitly show the code for data gathering/cleaning etc. in a language that your collaborators can understand, along with making custom d3 charts with that data. All without ever leaving RStudio. I will show you my quick and dirty solution to doing so.&lt;/p&gt;
&lt;div id=&#34;getting-data-into-javascript&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting data into Javascript&lt;/h2&gt;
&lt;p&gt;Instead of generating a csv file in R and then loading that into javascript we will instead send the data directly through the html to javascript. (&lt;em&gt;Note:&lt;/em&gt; This wont work well with super large data).&lt;/p&gt;
&lt;p&gt;Inspired by &lt;a href=&#34;https://medium.com/@becausealice2/getting-r-and-d3-js-to-play-nicely-in-r-markdown-270e302a52d3#.772g93eb3&#34;&gt;this&lt;/a&gt; medium post I wrote a little function that takes a dataframe and sends it to the html document in the &lt;code&gt;.json&lt;/code&gt; format.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(jsonlite)

send_df_to_js &amp;lt;- function(df){
  cat(
    paste(
    &amp;#39;&amp;lt;script&amp;gt;
      var data = &amp;#39;,toJSON(df),&amp;#39;;
    &amp;lt;/script&amp;gt;&amp;#39;
    , sep=&amp;quot;&amp;quot;)
  )
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To illustrate how it works we will generate some random data into a dataframe.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Generate some random x and y data to plot
n &amp;lt;- 300
random_data &amp;lt;- data_frame(x = runif(n)*10) %&amp;gt;% 
  mutate(y = 0.5*x^3 - 1.3*x^2 + rnorm(n, mean = 0, sd = 80),
         group = paste(&amp;quot;group&amp;quot;, sample(c(1,2,3), n, replace = T)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we send a snippit of the dataframe into the function to see the output…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;random_data %&amp;gt;% 
  head() %&amp;gt;% 
  send_df_to_js()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;script&amp;gt;
##       var data = [{&amp;quot;x&amp;quot;:5.3246,&amp;quot;y&amp;quot;:122.9751,&amp;quot;group&amp;quot;:&amp;quot;group 3&amp;quot;},{&amp;quot;x&amp;quot;:6.9045,&amp;quot;y&amp;quot;:117.0852,&amp;quot;group&amp;quot;:&amp;quot;group 3&amp;quot;},{&amp;quot;x&amp;quot;:9.1311,&amp;quot;y&amp;quot;:312.7409,&amp;quot;group&amp;quot;:&amp;quot;group 3&amp;quot;},{&amp;quot;x&amp;quot;:0.5559,&amp;quot;y&amp;quot;:-80.3896,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;},{&amp;quot;x&amp;quot;:4.6768,&amp;quot;y&amp;quot;:115.0473,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;},{&amp;quot;x&amp;quot;:8.9504,&amp;quot;y&amp;quot;:358.7016,&amp;quot;group&amp;quot;:&amp;quot;group 1&amp;quot;}];
##     &amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Beautiful, we have our data, in &lt;code&gt;json&lt;/code&gt; format, wrapped in a script tag. Now we can send the whole dataframe through. This time I am using the &lt;code&gt;results = &amp;quot;asis&amp;quot;&lt;/code&gt; option in the code chunk (&lt;code&gt;{r, results = &amp;quot;asis&amp;quot;}&lt;/code&gt;), to write the results directly to the html document and not to the output like we did above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Initiate data transfer protocol one
send_df_to_js(random_data)&lt;/code&gt;&lt;/pre&gt;
&lt;script&gt;
      var data = [{&#34;x&#34;:5.3246,&#34;y&#34;:122.9751,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.9045,&#34;y&#34;:117.0852,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.1311,&#34;y&#34;:312.7409,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.5559,&#34;y&#34;:-80.3896,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.6768,&#34;y&#34;:115.0473,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.9504,&#34;y&#34;:358.7016,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.5246,&#34;y&#34;:81.3299,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.2281,&#34;y&#34;:268.1925,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.4149,&#34;y&#34;:-41.1731,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.54,&#34;y&#34;:143.972,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.1647,&#34;y&#34;:37.0031,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.3158,&#34;y&#34;:135.4621,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.9032,&#34;y&#34;:-8.4533,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.6516,&#34;y&#34;:236.0343,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.6352,&#34;y&#34;:-47.6863,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.347,&#34;y&#34;:-78.274,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.1726,&#34;y&#34;:278.4247,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.7549,&#34;y&#34;:-36.8618,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.3329,&#34;y&#34;:173.7892,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.6573,&#34;y&#34;:229.9297,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.2472,&#34;y&#34;:226.8547,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.2241,&#34;y&#34;:40.25,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.7978,&#34;y&#34;:62.1342,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.7459,&#34;y&#34;:163.6905,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.806,&#34;y&#34;:46.7496,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.2921,&#34;y&#34;:-32.1279,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.4041,&#34;y&#34;:148.3842,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.2985,&#34;y&#34;:-79.6476,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.9514,&#34;y&#34;:32.9182,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.8997,&#34;y&#34;:156.5728,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.1575,&#34;y&#34;:48.6139,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.322,&#34;y&#34;:105.9096,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.4353,&#34;y&#34;:140.4947,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.67,&#34;y&#34;:88.9629,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.44,&#34;y&#34;:-116.6142,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.0051,&#34;y&#34;:-20.3762,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.6199,&#34;y&#34;:49.2831,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.4436,&#34;y&#34;:-7.1237,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.3409,&#34;y&#34;:8.648,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.3204,&#34;y&#34;:-47.3753,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.6047,&#34;y&#34;:262.2087,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.6247,&#34;y&#34;:135.9289,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.4663,&#34;y&#34;:18.038,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.7929,&#34;y&#34;:131.8284,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.7533,&#34;y&#34;:348.7937,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.1657,&#34;y&#34;:-31.2583,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.4719,&#34;y&#34;:0.5755,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.0987,&#34;y&#34;:27.1865,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.4019,&#34;y&#34;:64.5846,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.0344,&#34;y&#34;:-31.8217,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.4265,&#34;y&#34;:253.559,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.8445,&#34;y&#34;:350.4434,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.3263,&#34;y&#34;:-33.0538,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.1795,&#34;y&#34;:-76.3764,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.4519,&#34;y&#34;:368.607,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.9674,&#34;y&#34;:-95.1508,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.4369,&#34;y&#34;:42.2921,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.7662,&#34;y&#34;:74.4905,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.4282,&#34;y&#34;:72.2106,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.9887,&#34;y&#34;:570.7665,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.6062,&#34;y&#34;:134.585,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.6791,&#34;y&#34;:44.969,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.3667,&#34;y&#34;:141.2013,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.1295,&#34;y&#34;:330.777,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.3193,&#34;y&#34;:93.1751,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.9457,&#34;y&#34;:-89.469,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.3694,&#34;y&#34;:79.715,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.0805,&#34;y&#34;:402.3389,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.2944,&#34;y&#34;:75.0622,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.3487,&#34;y&#34;:76.9836,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.7065,&#34;y&#34;:23.8521,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.8297,&#34;y&#34;:89.6689,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.7313,&#34;y&#34;:219.5758,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.9777,&#34;y&#34;:-51.764,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.5444,&#34;y&#34;:294.9685,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.1063,&#34;y&#34;:-32.0271,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.2599,&#34;y&#34;:26.2432,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.3565,&#34;y&#34;:264.4962,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.1629,&#34;y&#34;:319.5783,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.0645,&#34;y&#34;:154.5482,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.8642,&#34;y&#34;:31.2401,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.674,&#34;y&#34;:105.4221,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.3938,&#34;y&#34;:147.9484,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.0743,&#34;y&#34;:-19.2892,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.2136,&#34;y&#34;:81.5937,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.0166,&#34;y&#34;:-63.8589,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.4659,&#34;y&#34;:246.4744,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.4977,&#34;y&#34;:133.1263,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.9176,&#34;y&#34;:21.684,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.825,&#34;y&#34;:51.2373,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.7736,&#34;y&#34;:108.391,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.4246,&#34;y&#34;:83.6941,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.928,&#34;y&#34;:25.9002,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.5948,&#34;y&#34;:-121.1263,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.4522,&#34;y&#34;:105.9277,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.1362,&#34;y&#34;:-65.6993,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.7332,&#34;y&#34;:401.9002,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.5161,&#34;y&#34;:33.9605,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.908,&#34;y&#34;:23.4025,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.2322,&#34;y&#34;:3.2443,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.7892,&#34;y&#34;:-48.0356,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.6822,&#34;y&#34;:227.5688,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.4345,&#34;y&#34;:-10.1115,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.3769,&#34;y&#34;:-32.3761,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.8183,&#34;y&#34;:171.8569,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.0274,&#34;y&#34;:-16.8817,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.2113,&#34;y&#34;:164.9101,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.5784,&#34;y&#34;:228.9128,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.2833,&#34;y&#34;:-114.4416,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.9233,&#34;y&#34;:316.8529,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.9769,&#34;y&#34;:-158.7767,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.331,&#34;y&#34;:-75.3782,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.3182,&#34;y&#34;:-61.5722,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.1549,&#34;y&#34;:-22.5933,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.4923,&#34;y&#34;:151.3828,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.4205,&#34;y&#34;:371.8337,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.902,&#34;y&#34;:381.4643,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.8423,&#34;y&#34;:75.1478,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.4932,&#34;y&#34;:302.1836,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.5973,&#34;y&#34;:41.2486,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.4376,&#34;y&#34;:-25.8743,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.483,&#34;y&#34;:69.027,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.1771,&#34;y&#34;:-39.215,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.0231,&#34;y&#34;:367.7342,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.5235,&#34;y&#34;:112.0805,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.4014,&#34;y&#34;:230.1556,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.9127,&#34;y&#34;:215.9403,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.094,&#34;y&#34;:-129.0399,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.7952,&#34;y&#34;:190.77,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.6804,&#34;y&#34;:-13.2733,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.0176,&#34;y&#34;:74.8469,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.1589,&#34;y&#34;:87.5007,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.4437,&#34;y&#34;:190.8078,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.0754,&#34;y&#34;:152.5632,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.2248,&#34;y&#34;:-11.4569,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.3702,&#34;y&#34;:6.1376,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.3052,&#34;y&#34;:54.6648,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.0862,&#34;y&#34;:58.0715,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.0882,&#34;y&#34;:136.7127,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.9915,&#34;y&#34;:301.4852,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.5409,&#34;y&#34;:336.1521,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.0036,&#34;y&#34;:94.1457,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.4545,&#34;y&#34;:175.5482,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.0351,&#34;y&#34;:-173.9266,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.1627,&#34;y&#34;:141.5131,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.9213,&#34;y&#34;:419.4031,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.1757,&#34;y&#34;:80.5025,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.6407,&#34;y&#34;:144.4288,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.8003,&#34;y&#34;:9.3212,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.7569,&#34;y&#34;:155.6762,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.5455,&#34;y&#34;:31.3334,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.4925,&#34;y&#34;:-172.9651,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.2653,&#34;y&#34;:208.566,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.8271,&#34;y&#34;:41.4729,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.7147,&#34;y&#34;:-34.3155,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.8013,&#34;y&#34;:170.1455,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.9053,&#34;y&#34;:87.1709,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.2787,&#34;y&#34;:-15.9471,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.3303,&#34;y&#34;:-57.8343,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.3774,&#34;y&#34;:63.4665,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.8784,&#34;y&#34;:-91.4494,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.5112,&#34;y&#34;:196.3263,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.8935,&#34;y&#34;:-27.6529,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.2836,&#34;y&#34;:-61.4355,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.2976,&#34;y&#34;:78.8222,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.2354,&#34;y&#34;:15.7557,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.3225,&#34;y&#34;:-203.978,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.7139,&#34;y&#34;:237.6306,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.4091,&#34;y&#34;:-54.2771,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.3068,&#34;y&#34;:-63.7316,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.7395,&#34;y&#34;:80.6151,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.3802,&#34;y&#34;:52.9383,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.3362,&#34;y&#34;:-73.7253,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.0591,&#34;y&#34;:242.5857,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.7019,&#34;y&#34;:104.1648,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.5519,&#34;y&#34;:272.453,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.8608,&#34;y&#34;:298.8764,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.2083,&#34;y&#34;:170.7973,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.715,&#34;y&#34;:335.6923,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.6136,&#34;y&#34;:110.0463,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.3458,&#34;y&#34;:-86.5204,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.3092,&#34;y&#34;:131.1848,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.9358,&#34;y&#34;:301.8724,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.945,&#34;y&#34;:-37.0052,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.6556,&#34;y&#34;:-24.0374,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.4395,&#34;y&#34;:58.5665,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.8826,&#34;y&#34;:-56.1356,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.0797,&#34;y&#34;:-67.7063,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.7075,&#34;y&#34;:158.7697,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.8103,&#34;y&#34;:1.8034,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.8652,&#34;y&#34;:239.6715,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.7897,&#34;y&#34;:100.1812,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.6447,&#34;y&#34;:-70.5464,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.2032,&#34;y&#34;:52.8343,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.5775,&#34;y&#34;:-150.7584,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.951,&#34;y&#34;:335.3193,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.0554,&#34;y&#34;:98.5827,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.236,&#34;y&#34;:-40.782,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.5353,&#34;y&#34;:244.9332,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.7016,&#34;y&#34;:-78.3954,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.1499,&#34;y&#34;:197.9383,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.923,&#34;y&#34;:43.1428,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.5948,&#34;y&#34;:170.5829,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.5645,&#34;y&#34;:44.428,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.4186,&#34;y&#34;:1.6758,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.775,&#34;y&#34;:-46.8665,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.417,&#34;y&#34;:248.2049,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.3977,&#34;y&#34;:144.749,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.8897,&#34;y&#34;:44.074,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.9835,&#34;y&#34;:421.0916,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.9958,&#34;y&#34;:-80.9448,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.8299,&#34;y&#34;:97.1437,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.2817,&#34;y&#34;:228.8704,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.9195,&#34;y&#34;:14.7402,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.8001,&#34;y&#34;:-50.7982,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.1112,&#34;y&#34;:40.8197,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.5385,&#34;y&#34;:347.2631,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.0381,&#34;y&#34;:-146.0991,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.0492,&#34;y&#34;:113.7027,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.4219,&#34;y&#34;:39.9631,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.9282,&#34;y&#34;:104.5879,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.5499,&#34;y&#34;:45.295,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.8885,&#34;y&#34;:65.5611,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.782,&#34;y&#34;:-42.2255,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.7221,&#34;y&#34;:9.4986,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.3998,&#34;y&#34;:-94.6031,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.8903,&#34;y&#34;:-95.9587,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.0393,&#34;y&#34;:-8.9664,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.5379,&#34;y&#34;:84.9578,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.6506,&#34;y&#34;:-93.9752,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.5871,&#34;y&#34;:52.2967,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.3811,&#34;y&#34;:321.3733,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.1518,&#34;y&#34;:277.0786,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.5635,&#34;y&#34;:247.9585,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.6113,&#34;y&#34;:-87.2377,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.1796,&#34;y&#34;:259.5815,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.6927,&#34;y&#34;:270.4065,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.0517,&#34;y&#34;:140.7083,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.0372,&#34;y&#34;:12.5547,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.7983,&#34;y&#34;:157.3438,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.5242,&#34;y&#34;:3.0352,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.5267,&#34;y&#34;:44.7471,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.4289,&#34;y&#34;:109.6324,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.919,&#34;y&#34;:-114.8329,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.5297,&#34;y&#34;:60.2061,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.0672,&#34;y&#34;:112.6606,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.8853,&#34;y&#34;:-128.3626,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.0886,&#34;y&#34;:-59.307,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.3585,&#34;y&#34;:133.429,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.9205,&#34;y&#34;:275.612,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.4064,&#34;y&#34;:25.1998,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.1312,&#34;y&#34;:107.9654,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.0437,&#34;y&#34;:47.7779,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.447,&#34;y&#34;:-72.1946,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.4087,&#34;y&#34;:307.4334,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.1958,&#34;y&#34;:-115.224,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.4746,&#34;y&#34;:77.3147,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.6193,&#34;y&#34;:19.4547,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.349,&#34;y&#34;:178.2281,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.2897,&#34;y&#34;:-52.1581,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.4932,&#34;y&#34;:14.075,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.5929,&#34;y&#34;:71.8845,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.1886,&#34;y&#34;:109.6038,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.4635,&#34;y&#34;:27.3066,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.7579,&#34;y&#34;:314.0219,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.3203,&#34;y&#34;:241.4621,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.432,&#34;y&#34;:198.5585,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.5774,&#34;y&#34;:-176.184,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.1575,&#34;y&#34;:219.6413,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.2135,&#34;y&#34;:114.0994,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.1663,&#34;y&#34;:59.9761,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.84,&#34;y&#34;:65.0767,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.7534,&#34;y&#34;:61.1269,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.3049,&#34;y&#34;:76.9293,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.791,&#34;y&#34;:100.9639,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.3639,&#34;y&#34;:-3.0325,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.6077,&#34;y&#34;:-17.1387,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.9154,&#34;y&#34;:56.5157,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.0741,&#34;y&#34;:-16.7012,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.9286,&#34;y&#34;:66.9978,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.2921,&#34;y&#34;:124.2598,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.7871,&#34;y&#34;:34.1566,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.399,&#34;y&#34;:57.5824,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.3217,&#34;y&#34;:150.5722,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.954,&#34;y&#34;:14.334,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.7704,&#34;y&#34;:-108.8828,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.2289,&#34;y&#34;:231.9883,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.6917,&#34;y&#34;:-92.1462,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.2908,&#34;y&#34;:314.0999,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.1443,&#34;y&#34;:-16.9593,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.6899,&#34;y&#34;:16.8925,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.5404,&#34;y&#34;:-101.0571,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.7865,&#34;y&#34;:382.7427,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.4787,&#34;y&#34;:-6.6589,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.9529,&#34;y&#34;:101.6804,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.4206,&#34;y&#34;:105.6531,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.4375,&#34;y&#34;:-103.2384,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.8174,&#34;y&#34;:-27.8235,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.934,&#34;y&#34;:332.6342,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.5588,&#34;y&#34;:-84.7316,&#34;group&#34;:&#34;group 1&#34;}];
    &lt;/script&gt;
&lt;p&gt;Now our data is inside our page’s javascript scope and ready to be played with!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;drawing-pretty-pictures&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Drawing pretty pictures&lt;/h2&gt;
&lt;p&gt;Let’s make a super simple d3 scatter plot to see this randomly generated data. All I have to do is include my desired javascript libraries, make a &lt;code&gt;div&lt;/code&gt; element for my visualization to go into and then put my &lt;code&gt;{js}&lt;/code&gt; block in. RMarkdown will slot the javascript into the page and we’re good to go.&lt;/p&gt;
&lt;p&gt;In this example I did…&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-3.1.1.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;https://d3js.org/d3.v4.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;div id = &amp;quot;viz&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; 

` ` `{js}
//code goes here
` ` `&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;did-it-work&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Did it work?&lt;/h2&gt;
&lt;script src=&#34;https://code.jquery.com/jquery-3.1.1.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://d3js.org/d3.v4.min.js&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;viz&#34;&gt;

&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
var point_vals = d3.select(&#34;#viz&#34;)
  .append(&#34;p&#34;)
  .attr(&#34;align&#34;, &#34;center&#34;)
  .text(&#34;Mouseover some data!&#34;);

//Get how wide our page is in pixels so we can draw our plot in it
var page_width = $(&#34;#did-it-work&#34;).width();
  
// set the dimensions and margins of the graph
var margin = 30,
    width = page_width - 2*margin,
    height = page_width*0.8 - 2*margin;
    
// Find max data values
var x_extent = d3.extent(data, d =&gt; d.x);
var y_extent = d3.extent(data, d =&gt; d.y);

// Set the scales 
var x = d3.scaleLinear()
  .domain(x_extent)
  .range([0, width]);
  
var y = d3.scaleLinear()
  .domain(y_extent)
  .range([height, 0]);

//Set up our SVG element
var svg = d3.select(&#34;#viz&#34;).append(&#34;svg&#34;)
    .attr(&#34;width&#34;, width + 2*margin)
    .attr(&#34;height&#34;, height + 2*margin)
  .append(&#34;g&#34;)
    .attr(&#34;transform&#34;,
          &#34;translate(&#34; + margin + &#34;,&#34; + margin + &#34;)&#34;);

var bounce_select = d3.transition()
    .duration(1000)
    .ease(d3.easeElastic.period(0.4));
    
// Add the scatterplot
svg.selectAll(&#34;.dots&#34;)
    .data(data)
  .enter().append(&#34;circle&#34;)
    .attr(&#34;class&#34;, &#34;dots&#34;)
    .attr(&#34;fill&#34;, d =&gt; d.group === &#34;group 1&#34;? &#34;steelblue&#34;:&#34;orangered&#34;)
    .attr(&#34;fill-opacity&#34;, 0.3)
    .attr(&#34;r&#34;, 5)
    .attr(&#34;cx&#34;, d =&gt; x(d.x) )
    .attr(&#34;cy&#34;, d =&gt; y(d.y) )
    .on(&#34;mouseover&#34;, function(d){
       d3.selectAll(&#34;.dots&#34;).attr(&#34;r&#34;, 5) //make sure all the dots are small
       d3.select(this)
        .transition(bounce_select)
        .attr(&#34;r&#34;, 10);
      
       point_vals.text(&#34;X:&#34; + d.x + &#34; Y:&#34; + d.y) //change the title of the graph to the datapoint
    });
    
// Draw the axes    
// Add the X Axis
svg.append(&#34;g&#34;)
    .attr(&#34;transform&#34;, &#34;translate(0,&#34; + height + &#34;)&#34;)
    .call(d3.axisBottom(x));

// Add the Y Axis
svg.append(&#34;g&#34;)
    .call(d3.axisLeft(y));
&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;why-when&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why/ When&lt;/h2&gt;
&lt;p&gt;This is a bad example of a visualization for this scenario as something like plotly could do this in much less effort. If you’re doing something more complicated/ bespoke then this is a great resource to have.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;addendum&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Addendum&lt;/h2&gt;
&lt;p&gt;If you’re interested, here’s the javascript code I included to make the above graph.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var point_vals = d3.select(&amp;quot;#viz&amp;quot;).append(&amp;quot;p&amp;quot;).text(&amp;quot;Mouseover some data!&amp;quot;);

//Get how wide our page is in pixels so we can draw our plot in it
var page_width = $(&amp;quot;#did-it-work&amp;quot;).width();
  
// set the dimensions and margins of the graph
var margin = 20,
    width = page_width - 2*margin,
    height = page_width*0.8 - 2*margin;
    
// Find max data values
var x_extent = d3.extent(data, d =&amp;gt; d.x);
var y_extent = d3.extent(data, d =&amp;gt; d.y);

// Set the scales 
var x = d3.scaleLinear()
  .domain(x_extent)
  .range([0, width]);
  
var y = d3.scaleLinear()
  .domain(y_extent)
  .range([height, 0]);

//Set up our SVG element
var svg = d3.select(&amp;quot;#viz&amp;quot;).append(&amp;quot;svg&amp;quot;)
    .attr(&amp;quot;width&amp;quot;, width + 2*margin)
    .attr(&amp;quot;height&amp;quot;, height + 2*margin)
  .append(&amp;quot;g&amp;quot;)
    .attr(&amp;quot;transform&amp;quot;,
          &amp;quot;translate(&amp;quot; + margin + &amp;quot;,&amp;quot; + margin + &amp;quot;)&amp;quot;);

var bounce_select = d3.transition()
    .duration(1000)
    .ease(d3.easeElastic.period(0.4));
    
// Add the scatterplot
svg.selectAll(&amp;quot;.dots&amp;quot;)
    .data(data)
  .enter().append(&amp;quot;circle&amp;quot;)
    .attr(&amp;quot;class&amp;quot;, &amp;quot;dots&amp;quot;)
    .attr(&amp;quot;fill&amp;quot;, d =&amp;gt; d.group === &amp;quot;group 1&amp;quot;? &amp;quot;steelblue&amp;quot;:&amp;quot;orangered&amp;quot;)
    .attr(&amp;quot;fill-opacity&amp;quot;, 0.3)
    .attr(&amp;quot;r&amp;quot;, 5)
    .attr(&amp;quot;cx&amp;quot;, d =&amp;gt; x(d.x) )
    .attr(&amp;quot;cy&amp;quot;, d =&amp;gt; y(d.y) )
    .on(&amp;quot;mouseover&amp;quot;, function(d){
       d3.selectAll(&amp;quot;.dots&amp;quot;).attr(&amp;quot;r&amp;quot;, 5) //make sure all the dots are small
       d3.select(this)
        .transition(bounce_select)
        .attr(&amp;quot;r&amp;quot;, 10);
      
       point_vals.text(&amp;quot;X:&amp;quot; + d.x + &amp;quot; Y:&amp;quot; + d.y) //change the title of the graph to the datapoint
    });
    
// Draw the axes    
// Add the X Axis
svg.append(&amp;quot;g&amp;quot;)
    .attr(&amp;quot;transform&amp;quot;, &amp;quot;translate(0,&amp;quot; + height + &amp;quot;)&amp;quot;)
    .call(d3.axisBottom(x));

// Add the Y Axis
svg.append(&amp;quot;g&amp;quot;)
    .call(d3.axisLeft(y));&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
  </channel>
</rss>
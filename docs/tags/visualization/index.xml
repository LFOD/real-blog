<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visualization on Live Free or Dichotomize</title>
    <link>/tags/visualization/index.xml</link>
    <description>Recent content in Visualization on Live Free or Dichotomize</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/tags/visualization/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Custom JavaScript Visualizations in RMarkdown</title>
      <link>/2017/01/24/custom-javascript-visualizations-in-rmarkdown/</link>
      <pubDate>Tue, 24 Jan 2017 10:54:24 +0200</pubDate>
      
      <guid>/2017/01/24/custom-javascript-visualizations-in-rmarkdown/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;I happened to stumble upon the &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download/preview/&#34;&gt;preview release page&lt;/a&gt; for RStudio recently and noticed something that made me exorbitantly happy.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A preview release of RStudio v1.0.136 is now available for testing and feedback. This release includes… Support for JavaScript and CSS chunks in R Notebooks…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;“Support for JavaScript and CSS chunks in R Notebooks”&lt;/em&gt;! As someone who loves using javascript for plotting (and secretly for manipulating) data this is massively exciting. Previously my workflow for generating an interactive graphic would be something like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download data&lt;/li&gt;
&lt;li&gt;Clean data and do preliminary visualization in R&lt;/li&gt;
&lt;li&gt;Export what I liked to a csv file and make a new directory with a set of &lt;code&gt;.html, .js, .css&lt;/code&gt; files in it.&lt;/li&gt;
&lt;li&gt;Load data into javascript/d3.js in the new javascript file.&lt;/li&gt;
&lt;li&gt;Plot.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This workflow has served me very well, I did it probably 20 times a day when working at the New York Times and I am very fast with it. If you want to just make a stand alone visualization it’s fantastic, however, as a biostatistician who works with a lot of other biostatisticians, people tend to want to see where the data comes from.&lt;/p&gt;
&lt;p&gt;With Javascript chunks in &lt;code&gt;.Rmd&lt;/code&gt; files you can explicitly show the code for data gathering/cleaning etc. in a language that your collaborators can understand, along with making custom d3 charts with that data. All without ever leaving RStudio. I will show you my quick and dirty solution to doing so.&lt;/p&gt;
&lt;div id=&#34;getting-data-into-javascript&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting data into Javascript&lt;/h2&gt;
&lt;p&gt;Instead of generating a csv file in R and then loading that into javascript we will instead send the data directly through the html to javascript. (&lt;em&gt;Note:&lt;/em&gt; This wont work well with super large data).&lt;/p&gt;
&lt;p&gt;Inspired by &lt;a href=&#34;https://medium.com/@becausealice2/getting-r-and-d3-js-to-play-nicely-in-r-markdown-270e302a52d3#.772g93eb3&#34;&gt;this&lt;/a&gt; medium post I wrote a little function that takes a dataframe and sends it to the html document in the &lt;code&gt;.json&lt;/code&gt; format.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(jsonlite)

send_df_to_js &amp;lt;- function(df){
  cat(
    paste(
    &amp;#39;&amp;lt;script&amp;gt;
      var data = &amp;#39;,toJSON(df),&amp;#39;;
    &amp;lt;/script&amp;gt;&amp;#39;
    , sep=&amp;quot;&amp;quot;)
  )
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To illustrate how it works we will generate some random data into a dataframe.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Generate some random x and y data to plot
n &amp;lt;- 300
random_data &amp;lt;- data_frame(x = runif(n)*10) %&amp;gt;% 
  mutate(y = 0.5*x^3 - 1.3*x^2 + rnorm(n, mean = 0, sd = 80),
         group = paste(&amp;quot;group&amp;quot;, sample(c(1,2,3), n, replace = T)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we send a snippit of the dataframe into the function to see the output…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;random_data %&amp;gt;% 
  head() %&amp;gt;% 
  send_df_to_js()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;script&amp;gt;
##       var data = [{&amp;quot;x&amp;quot;:8.6669,&amp;quot;y&amp;quot;:394.0166,&amp;quot;group&amp;quot;:&amp;quot;group 1&amp;quot;},{&amp;quot;x&amp;quot;:2.7642,&amp;quot;y&amp;quot;:-111.1789,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;},{&amp;quot;x&amp;quot;:2.4007,&amp;quot;y&amp;quot;:-68.8392,&amp;quot;group&amp;quot;:&amp;quot;group 1&amp;quot;},{&amp;quot;x&amp;quot;:5.3425,&amp;quot;y&amp;quot;:68.5745,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;},{&amp;quot;x&amp;quot;:8.4944,&amp;quot;y&amp;quot;:300.47,&amp;quot;group&amp;quot;:&amp;quot;group 3&amp;quot;},{&amp;quot;x&amp;quot;:0.7149,&amp;quot;y&amp;quot;:-22.7415,&amp;quot;group&amp;quot;:&amp;quot;group 2&amp;quot;}];
##     &amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Beautiful, we have our data, in &lt;code&gt;json&lt;/code&gt; format, wrapped in a script tag. Now we can send the whole dataframe through. This time I am using the &lt;code&gt;results = &amp;quot;asis&amp;quot;&lt;/code&gt; option in the code chunk (&lt;code&gt;{r, results = &amp;quot;asis&amp;quot;}&lt;/code&gt;), to write the results directly to the html document and not to the output like we did above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Initiate data transfer protocol one
send_df_to_js(random_data)&lt;/code&gt;&lt;/pre&gt;
&lt;script&gt;
      var data = [{&#34;x&#34;:8.6669,&#34;y&#34;:394.0166,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.7642,&#34;y&#34;:-111.1789,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.4007,&#34;y&#34;:-68.8392,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.3425,&#34;y&#34;:68.5745,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.4944,&#34;y&#34;:300.47,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.7149,&#34;y&#34;:-22.7415,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.6545,&#34;y&#34;:33.5914,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.9172,&#34;y&#34;:320.4479,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.1358,&#34;y&#34;:110.1833,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.8852,&#34;y&#34;:38.3114,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.705,&#34;y&#34;:-26.447,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.0194,&#34;y&#34;:-8.1024,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.722,&#34;y&#34;:-93.6821,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.4534,&#34;y&#34;:-41.4203,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.1238,&#34;y&#34;:184.0845,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.1566,&#34;y&#34;:75.0244,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.822,&#34;y&#34;:64.6556,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.4651,&#34;y&#34;:-12.5994,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.9249,&#34;y&#34;:-36.3125,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.2083,&#34;y&#34;:176.4866,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.4147,&#34;y&#34;:-5.7793,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.0818,&#34;y&#34;:32.763,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.3222,&#34;y&#34;:80.5913,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.5928,&#34;y&#34;:111.5346,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.0187,&#34;y&#34;:-34.8616,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.0205,&#34;y&#34;:-120.9726,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.995,&#34;y&#34;:27.5269,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.0137,&#34;y&#34;:68.1951,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.8127,&#34;y&#34;:204.3198,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.1533,&#34;y&#34;:12.6691,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.7694,&#34;y&#34;:136.4848,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.9137,&#34;y&#34;:133.1774,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.4002,&#34;y&#34;:-119.5369,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.9987,&#34;y&#34;:44.2454,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.0145,&#34;y&#34;:86.2724,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.5099,&#34;y&#34;:107.5436,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.1492,&#34;y&#34;:36.5269,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.0318,&#34;y&#34;:232.1102,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.8197,&#34;y&#34;:374.196,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.1858,&#34;y&#34;:-96.3216,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.9816,&#34;y&#34;:120.1914,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.4222,&#34;y&#34;:-60.8416,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.9647,&#34;y&#34;:296.7632,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.6837,&#34;y&#34;:280.0129,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.872,&#34;y&#34;:60.9881,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.6866,&#34;y&#34;:49.6855,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.1688,&#34;y&#34;:83.9556,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.3974,&#34;y&#34;:4.6751,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.6907,&#34;y&#34;:-45.5316,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.9269,&#34;y&#34;:182.6178,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.846,&#34;y&#34;:313.3796,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.3572,&#34;y&#34;:37.8214,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.2098,&#34;y&#34;:-140.5061,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.5466,&#34;y&#34;:-78.8236,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.2014,&#34;y&#34;:397.8535,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.3238,&#34;y&#34;:-110.247,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.1783,&#34;y&#34;:-93.6202,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.7154,&#34;y&#34;:154.9426,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.5184,&#34;y&#34;:43.2236,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.3781,&#34;y&#34;:186.5253,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.6847,&#34;y&#34;:51.6164,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.6853,&#34;y&#34;:356.4135,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.4426,&#34;y&#34;:56.6247,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.8041,&#34;y&#34;:-43.0737,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.1614,&#34;y&#34;:136.6233,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.0113,&#34;y&#34;:105.2294,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.1521,&#34;y&#34;:60.7257,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.8317,&#34;y&#34;:21.3005,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.5937,&#34;y&#34;:179.1683,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.8538,&#34;y&#34;:-67.0308,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.6954,&#34;y&#34;:50.1548,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.7401,&#34;y&#34;:213.9911,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.9521,&#34;y&#34;:-29.9316,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.5739,&#34;y&#34;:-79.0018,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.3911,&#34;y&#34;:321.0075,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.4265,&#34;y&#34;:42.2303,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.124,&#34;y&#34;:44.2494,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.4326,&#34;y&#34;:134.9388,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.2694,&#34;y&#34;:-59.4032,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.6509,&#34;y&#34;:316.8341,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.7385,&#34;y&#34;:-62.0095,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.8362,&#34;y&#34;:41.9912,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.9517,&#34;y&#34;:-55.2459,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.4063,&#34;y&#34;:-96.7013,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.9448,&#34;y&#34;:166.433,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.8126,&#34;y&#34;:145.8128,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.9042,&#34;y&#34;:-78.5334,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.7886,&#34;y&#34;:-74.2198,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.9801,&#34;y&#34;:324.3074,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.9227,&#34;y&#34;:62.8468,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.3812,&#34;y&#34;:58.8299,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.3291,&#34;y&#34;:-34.3829,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.5418,&#34;y&#34;:-123.7495,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.5868,&#34;y&#34;:18.9224,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.2051,&#34;y&#34;:-82.654,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.2395,&#34;y&#34;:96.7398,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.9383,&#34;y&#34;:-55.3149,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.6129,&#34;y&#34;:-89.1767,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.5536,&#34;y&#34;:227.9194,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.7217,&#34;y&#34;:43.0789,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.0321,&#34;y&#34;:-104.2499,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.7781,&#34;y&#34;:-17.8537,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.5609,&#34;y&#34;:20.3819,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.7492,&#34;y&#34;:31.4729,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.6204,&#34;y&#34;:102.1011,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.0712,&#34;y&#34;:280.3489,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.3318,&#34;y&#34;:99.9381,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.274,&#34;y&#34;:153.55,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.184,&#34;y&#34;:74.6352,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.1248,&#34;y&#34;:233.6123,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.6098,&#34;y&#34;:380.0373,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.841,&#34;y&#34;:-40.6462,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.6761,&#34;y&#34;:287.5343,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.3592,&#34;y&#34;:313.4565,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.904,&#34;y&#34;:106.9484,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.9538,&#34;y&#34;:-35.485,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.6834,&#34;y&#34;:114.0946,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.9273,&#34;y&#34;:310.0699,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.2897,&#34;y&#34;:176.5631,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.5743,&#34;y&#34;:251.432,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.7874,&#34;y&#34;:47.8984,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.556,&#34;y&#34;:-123.6796,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.1096,&#34;y&#34;:193.7865,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.3435,&#34;y&#34;:28.9171,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.2286,&#34;y&#34;:352.436,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.6444,&#34;y&#34;:120.7432,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.3872,&#34;y&#34;:285.9595,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.7326,&#34;y&#34;:262.1825,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.5489,&#34;y&#34;:-74.6271,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.7076,&#34;y&#34;:158.2937,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.4954,&#34;y&#34;:47.3483,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.606,&#34;y&#34;:70.483,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.6363,&#34;y&#34;:281.8685,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.7591,&#34;y&#34;:163.4709,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.3149,&#34;y&#34;:-17.4883,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.0157,&#34;y&#34;:20.3799,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.5013,&#34;y&#34;:95.2598,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.7656,&#34;y&#34;:-89.8176,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.8501,&#34;y&#34;:-65.1483,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.9589,&#34;y&#34;:152.5921,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.3121,&#34;y&#34;:112.5524,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.6151,&#34;y&#34;:-22.1231,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.0298,&#34;y&#34;:139.7183,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.9851,&#34;y&#34;:-51.9026,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.4608,&#34;y&#34;:200.4613,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.9698,&#34;y&#34;:54.0193,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.1352,&#34;y&#34;:214.1755,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.4673,&#34;y&#34;:203.4615,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.577,&#34;y&#34;:66.1833,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.1229,&#34;y&#34;:-59.0888,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.9893,&#34;y&#34;:-121.4593,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.8159,&#34;y&#34;:65.7826,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.8174,&#34;y&#34;:76.9456,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.537,&#34;y&#34;:1.6929,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.2254,&#34;y&#34;:88.8805,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.2216,&#34;y&#34;:86.8964,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.6568,&#34;y&#34;:-6.2227,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.5417,&#34;y&#34;:194.1549,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.7685,&#34;y&#34;:103.2942,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.5509,&#34;y&#34;:189.8379,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.562,&#34;y&#34;:125.0726,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.6361,&#34;y&#34;:138.4721,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.5676,&#34;y&#34;:-67.7091,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.8023,&#34;y&#34;:-38.1838,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.5531,&#34;y&#34;:-64.0742,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.6064,&#34;y&#34;:232.8517,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.1253,&#34;y&#34;:-83.1021,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.3656,&#34;y&#34;:29.9366,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.3929,&#34;y&#34;:-99.0663,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.6923,&#34;y&#34;:55.2824,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.6548,&#34;y&#34;:32.1562,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:4.9136,&#34;y&#34;:21.3609,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.7498,&#34;y&#34;:291.3863,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.602,&#34;y&#34;:444.3942,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.8983,&#34;y&#34;:143.8308,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.4133,&#34;y&#34;:30.1797,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.5317,&#34;y&#34;:-18.866,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.8841,&#34;y&#34;:-80.3514,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.2954,&#34;y&#34;:-21.5749,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.4778,&#34;y&#34;:202.4144,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.4115,&#34;y&#34;:179.9452,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.8668,&#34;y&#34;:24.4384,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.0482,&#34;y&#34;:81.8487,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.2141,&#34;y&#34;:345.3875,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.8475,&#34;y&#34;:121.8019,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.354,&#34;y&#34;:193.6285,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.0222,&#34;y&#34;:183.4492,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.7895,&#34;y&#34;:232.6575,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.3932,&#34;y&#34;:49.0869,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.3047,&#34;y&#34;:22.2785,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.1483,&#34;y&#34;:-88.8887,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.7042,&#34;y&#34;:95.5784,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.0159,&#34;y&#34;:202.909,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.252,&#34;y&#34;:33.9542,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.8439,&#34;y&#34;:329.3039,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.5842,&#34;y&#34;:41.6744,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.9461,&#34;y&#34;:11.6068,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.5326,&#34;y&#34;:370.8197,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.467,&#34;y&#34;:73.1608,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.201,&#34;y&#34;:-72.2829,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.448,&#34;y&#34;:-20.7592,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.9105,&#34;y&#34;:-79.0158,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.7077,&#34;y&#34;:18.6797,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.2614,&#34;y&#34;:-1.1341,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.0399,&#34;y&#34;:148.8288,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.0964,&#34;y&#34;:83.0141,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.4658,&#34;y&#34;:-66.0736,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.0087,&#34;y&#34;:275.7611,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.5427,&#34;y&#34;:126.8269,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.0593,&#34;y&#34;:52.5996,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.7805,&#34;y&#34;:-43.6612,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:6.8153,&#34;y&#34;:99.9138,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.8225,&#34;y&#34;:40.0916,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.5006,&#34;y&#34;:256.8631,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.822,&#34;y&#34;:148.8179,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.0405,&#34;y&#34;:37.2424,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.6458,&#34;y&#34;:153.0681,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.2381,&#34;y&#34;:9.4371,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.3112,&#34;y&#34;:-32.8687,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.3921,&#34;y&#34;:98.6136,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.7202,&#34;y&#34;:-26.89,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.272,&#34;y&#34;:191.9713,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.4454,&#34;y&#34;:184.0757,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.5907,&#34;y&#34;:-10.277,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.374,&#34;y&#34;:27.8721,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.4206,&#34;y&#34;:193.3632,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.0482,&#34;y&#34;:160.7977,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.6473,&#34;y&#34;:-21.2931,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.769,&#34;y&#34;:76.6967,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:4.838,&#34;y&#34;:-90.4866,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.6611,&#34;y&#34;:166.2326,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.9167,&#34;y&#34;:-63.0279,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:8.8046,&#34;y&#34;:297.0913,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.6864,&#34;y&#34;:-23.0766,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.6,&#34;y&#34;:-74.3898,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.0003,&#34;y&#34;:219.115,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.1233,&#34;y&#34;:-158.4159,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.2072,&#34;y&#34;:-178.5441,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.709,&#34;y&#34;:92.4997,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.6372,&#34;y&#34;:206.0712,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.1293,&#34;y&#34;:122.0398,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.1006,&#34;y&#34;:-47.5407,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.1671,&#34;y&#34;:136.9969,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.3652,&#34;y&#34;:227.0572,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.7955,&#34;y&#34;:29.6686,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.2938,&#34;y&#34;:4.58,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.132,&#34;y&#34;:-49.3921,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.9619,&#34;y&#34;:36.9792,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:0.1775,&#34;y&#34;:35.8571,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.5508,&#34;y&#34;:24.7326,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:7.5366,&#34;y&#34;:99.0566,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.5821,&#34;y&#34;:-49.9576,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.1233,&#34;y&#34;:-16.1116,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:4.1569,&#34;y&#34;:8.0077,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.3661,&#34;y&#34;:61.7792,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.7316,&#34;y&#34;:-37.9105,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.0785,&#34;y&#34;:215.1903,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.987,&#34;y&#34;:110.0966,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:0.2468,&#34;y&#34;:18.142,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:5.6588,&#34;y&#34;:92.5979,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.1851,&#34;y&#34;:-156.8985,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.3279,&#34;y&#34;:-48.8255,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.5496,&#34;y&#34;:0.7388,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:6.521,&#34;y&#34;:-45.8797,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.3448,&#34;y&#34;:44.9177,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.4676,&#34;y&#34;:303.1485,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.7855,&#34;y&#34;:114.6199,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.9698,&#34;y&#34;:23.1059,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.825,&#34;y&#34;:188.0787,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.8157,&#34;y&#34;:49.9804,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.9431,&#34;y&#34;:-129.9462,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:5.8343,&#34;y&#34;:132.7119,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:1.212,&#34;y&#34;:49.569,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:6.9683,&#34;y&#34;:44.7434,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.1999,&#34;y&#34;:181.3534,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:9.3903,&#34;y&#34;:263.6194,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.4728,&#34;y&#34;:-19.7022,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.5342,&#34;y&#34;:23.866,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.5835,&#34;y&#34;:426.0405,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:5.7049,&#34;y&#34;:198.6647,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:9.9968,&#34;y&#34;:326.2817,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.6004,&#34;y&#34;:3.8902,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:8.3767,&#34;y&#34;:124.7322,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:2.1675,&#34;y&#34;:78.4132,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.6305,&#34;y&#34;:-41.7469,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:7.6666,&#34;y&#34;:64.1009,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.3161,&#34;y&#34;:-22.006,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.7787,&#34;y&#34;:-6.9856,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:1.0169,&#34;y&#34;:8.2316,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:8.0817,&#34;y&#34;:215.2442,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.2595,&#34;y&#34;:120.6255,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:0.343,&#34;y&#34;:-20.2161,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:1.4735,&#34;y&#34;:-39.2857,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:3.1647,&#34;y&#34;:-56.801,&#34;group&#34;:&#34;group 1&#34;},{&#34;x&#34;:9.9907,&#34;y&#34;:434.5427,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:2.0465,&#34;y&#34;:-128.9994,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:7.8461,&#34;y&#34;:76.9516,&#34;group&#34;:&#34;group 2&#34;},{&#34;x&#34;:3.6256,&#34;y&#34;:-68.8632,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:2.7891,&#34;y&#34;:84.0773,&#34;group&#34;:&#34;group 3&#34;},{&#34;x&#34;:3.3709,&#34;y&#34;:155.153,&#34;group&#34;:&#34;group 2&#34;}];
    &lt;/script&gt;
&lt;p&gt;Now our data is inside our page’s javascript scope and ready to be played with!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;drawing-pretty-pictures&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Drawing pretty pictures&lt;/h2&gt;
&lt;p&gt;Let’s make a super simple d3 scatter plot to see this randomly generated data. All I have to do is include my desired javascript libraries, make a &lt;code&gt;div&lt;/code&gt; element for my visualization to go into and then put my &lt;code&gt;{js}&lt;/code&gt; block in. RMarkdown will slot the javascript into the page and we’re good to go.&lt;/p&gt;
&lt;p&gt;In this example I did…&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;https://code.jquery.com/jquery-3.1.1.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;https://d3js.org/d3.v4.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;div id = &amp;quot;viz&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; 

` ` `{js}
//code goes here
` ` `&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;did-it-work&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Did it work?&lt;/h2&gt;
&lt;script src=&#34;https://code.jquery.com/jquery-3.1.1.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://d3js.org/d3.v4.min.js&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;viz&#34;&gt;

&lt;/div&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
var point_vals = d3.select(&#34;#viz&#34;)
  .append(&#34;p&#34;)
  .attr(&#34;align&#34;, &#34;center&#34;)
  .text(&#34;Mouseover some data!&#34;);

//Get how wide our page is in pixels so we can draw our plot in it
var page_width = $(&#34;#did-it-work&#34;).width();
  
// set the dimensions and margins of the graph
var margin = 20,
    width = page_width - 2*margin,
    height = page_width*0.8 - 2*margin;
    
// Find max data values
var x_extent = d3.extent(data, d =&gt; d.x);
var y_extent = d3.extent(data, d =&gt; d.y);

// Set the scales 
var x = d3.scaleLinear()
  .domain(x_extent)
  .range([0, width]);
  
var y = d3.scaleLinear()
  .domain(y_extent)
  .range([height, 0]);

//Set up our SVG element
var svg = d3.select(&#34;#viz&#34;).append(&#34;svg&#34;)
    .attr(&#34;width&#34;, width + 2*margin)
    .attr(&#34;height&#34;, height + 2*margin)
  .append(&#34;g&#34;)
    .attr(&#34;transform&#34;,
          &#34;translate(&#34; + margin + &#34;,&#34; + margin + &#34;)&#34;);

var bounce_select = d3.transition()
    .duration(1000)
    .ease(d3.easeElastic.period(0.4));
    
// Add the scatterplot
svg.selectAll(&#34;.dots&#34;)
    .data(data)
  .enter().append(&#34;circle&#34;)
    .attr(&#34;class&#34;, &#34;dots&#34;)
    .attr(&#34;fill&#34;, d =&gt; d.group === &#34;group 1&#34;? &#34;steelblue&#34;:&#34;orangered&#34;)
    .attr(&#34;fill-opacity&#34;, 0.3)
    .attr(&#34;r&#34;, 5)
    .attr(&#34;cx&#34;, d =&gt; x(d.x) )
    .attr(&#34;cy&#34;, d =&gt; y(d.y) )
    .on(&#34;mouseover&#34;, function(d){
       d3.selectAll(&#34;.dots&#34;).attr(&#34;r&#34;, 5) //make sure all the dots are small
       d3.select(this)
        .transition(bounce_select)
        .attr(&#34;r&#34;, 10);
      
       point_vals.text(&#34;X:&#34; + d.x + &#34; Y:&#34; + d.y) //change the title of the graph to the datapoint
    });
    
// Draw the axes    
// Add the X Axis
svg.append(&#34;g&#34;)
    .attr(&#34;transform&#34;, &#34;translate(0,&#34; + height + &#34;)&#34;)
    .call(d3.axisBottom(x));

// Add the Y Axis
svg.append(&#34;g&#34;)
    .call(d3.axisLeft(y));
&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;why-when&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why/ When&lt;/h2&gt;
&lt;p&gt;This is a bad example of a visualization for this scenario as something like plotly could do this in much less effort. If you’re doing something more complicated/ bespoke then this is a great resource to have.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;addendum&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Addendum&lt;/h2&gt;
&lt;p&gt;If you’re interested, here’s the javascript code I included to make the above graph.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var point_vals = d3.select(&amp;quot;#viz&amp;quot;).append(&amp;quot;p&amp;quot;).text(&amp;quot;Mouseover some data!&amp;quot;);

//Get how wide our page is in pixels so we can draw our plot in it
var page_width = $(&amp;quot;#did-it-work&amp;quot;).width();
  
// set the dimensions and margins of the graph
var margin = 20,
    width = page_width - 2*margin,
    height = page_width*0.8 - 2*margin;
    
// Find max data values
var x_extent = d3.extent(data, d =&amp;gt; d.x);
var y_extent = d3.extent(data, d =&amp;gt; d.y);

// Set the scales 
var x = d3.scaleLinear()
  .domain(x_extent)
  .range([0, width]);
  
var y = d3.scaleLinear()
  .domain(y_extent)
  .range([height, 0]);

//Set up our SVG element
var svg = d3.select(&amp;quot;#viz&amp;quot;).append(&amp;quot;svg&amp;quot;)
    .attr(&amp;quot;width&amp;quot;, width + 2*margin)
    .attr(&amp;quot;height&amp;quot;, height + 2*margin)
  .append(&amp;quot;g&amp;quot;)
    .attr(&amp;quot;transform&amp;quot;,
          &amp;quot;translate(&amp;quot; + margin + &amp;quot;,&amp;quot; + margin + &amp;quot;)&amp;quot;);

var bounce_select = d3.transition()
    .duration(1000)
    .ease(d3.easeElastic.period(0.4));
    
// Add the scatterplot
svg.selectAll(&amp;quot;.dots&amp;quot;)
    .data(data)
  .enter().append(&amp;quot;circle&amp;quot;)
    .attr(&amp;quot;class&amp;quot;, &amp;quot;dots&amp;quot;)
    .attr(&amp;quot;fill&amp;quot;, d =&amp;gt; d.group === &amp;quot;group 1&amp;quot;? &amp;quot;steelblue&amp;quot;:&amp;quot;orangered&amp;quot;)
    .attr(&amp;quot;fill-opacity&amp;quot;, 0.3)
    .attr(&amp;quot;r&amp;quot;, 5)
    .attr(&amp;quot;cx&amp;quot;, d =&amp;gt; x(d.x) )
    .attr(&amp;quot;cy&amp;quot;, d =&amp;gt; y(d.y) )
    .on(&amp;quot;mouseover&amp;quot;, function(d){
       d3.selectAll(&amp;quot;.dots&amp;quot;).attr(&amp;quot;r&amp;quot;, 5) //make sure all the dots are small
       d3.select(this)
        .transition(bounce_select)
        .attr(&amp;quot;r&amp;quot;, 10);
      
       point_vals.text(&amp;quot;X:&amp;quot; + d.x + &amp;quot; Y:&amp;quot; + d.y) //change the title of the graph to the datapoint
    });
    
// Draw the axes    
// Add the X Axis
svg.append(&amp;quot;g&amp;quot;)
    .attr(&amp;quot;transform&amp;quot;, &amp;quot;translate(0,&amp;quot; + height + &amp;quot;)&amp;quot;)
    .call(d3.axisBottom(x));

// Add the Y Axis
svg.append(&amp;quot;g&amp;quot;)
    .call(d3.axisLeft(y));&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
  </channel>
</rss>